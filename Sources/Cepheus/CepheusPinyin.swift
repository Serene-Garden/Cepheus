//
//  ContentView.swift
//  Cepheus Watch App
//
//  Created by 雷美淳 on 2024/4/11.
//

import SwiftUI

//struct PinyinGroupingView: View {
//  @State var input: String = "" //The input where the pinyin goes in
//  @State var output: [String] = [] //The seperated pinyin in string array
//
//  var body: some View {
//    List {
//      TextField("Input", text: $input)
//        .autocorrectionDisabled()
//        .onChange(of: input) {
//          output = groupedPinyin(input: input)
//        }
//      Text("\(output)")
//    }
//  }
//}

struct CepheusPiyin: View {
  //Isolation
  //Pinyin sorted alphabetical, characters sorted in frequentation
  //Add characters to this dictionary if you want
  //Total of 8453 characters
  private let CepheusPinyinDictionary: [String: [String]] = ["a": ["啊", "阿", "腌", "吖", "锕"], "ai": ["爱", "艾", "哀", "埃", "碍", "唉", "挨", "矮", "哎", "隘", "癌", "嗳", "瑷", "蔼", "霭", "暧", "皑", "欸", "嗌", "毐", "嫒", "砹", "锿", "叆"], "an": ["安", "暗", "案", "按", "岸", "俺", "黯", "庵", "鞍", "谙", "氨", "胺", "桉", "鹌", "犴", "盦", "铵", "唵", "垵", "埯", "𩽾"], "ang": ["昂", "肮", "盎", "卬"], "ao": ["奥", "傲", "熬", "敖", "凹", "澳", "懊", "鳌", "拗", "袄", "嗷", "翱", "坳", "遨", "媪", "鏖", "骜", "螯", "聱", "獒", "鏊", "奡", "璈", "廒", "岙", "隩", "薁", "嶅"], "ba": ["把", "八", "吧", "巴", "罢", "爸", "拔", "霸", "跋", "芭", "疤", "扒", "叭", "坝", "靶", "笆", "耙", "岜", "灞", "捌", "粑", "魃", "鲅", "菝", "钯", "朳", "蚆", "羓", "鲃", "妭", "胈"], "bai": ["白", "百", "伯", "败", "拜", "摆", "柏", "掰", "稗", "捭", "佰"], "ban": ["版", "半", "般", "办", "板", "班", "伴", "搬", "扮", "斑", "扳", "颁", "绊", "瓣", "拌", "坂", "阪", "瘢", "昄", "钣", "癍", "柈", "攽", "𨭉", "湴", "靽"], "bang": ["帮", "邦", "膀", "棒", "绑", "榜", "傍", "谤", "磅", "镑", "蚌", "梆", "浜", "蒡", "玤", "𠳐", "塝", "搒"], "bao": ["报", "宝", "保", "包", "抱", "暴", "薄", "爆", "炮", "堡", "饱", "剥", "胞", "豹", "鲍", "褒", "瀑", "曝", "苞", "葆", "刨", "鸨", "煲", "褓", "雹", "龅", "趵", "孢", "枹"], "bei": ["被", "北", "背", "备", "悲", "辈", "贝", "杯", "臂", "倍", "卑", "碑", "狈", "悖", "惫", "呗", "蓓", "焙", "孛", "琲", "钡", "碚", "邶", "鞴", "褙", "鐾", "鹎", "糒", "椑", "𬇙", "棓", "鞁"], "ben": ["本", "奔", "笨", "贲", "苯", "畚", "锛", "坌", "栟", "犇", "倴"], "beng": ["崩", "绷", "蹦", "迸", "甭", "蚌", "泵", "嘣", "甏", "琫", "镚", "祊"], "bi": ["比", "必", "笔", "毕", "避", "秘", "臂", "闭", "彼", "壁", "逼", "鼻", "辟", "碧", "币", "鄙", "陛", "蔽", "弊", "毙", "匕", "璧", "敝", "婢", "庇", "弼", "泌", "裨", "痹", "俾", "哔", "愎", "薜", "筚", "篦", "畀", "髀", "妣", "嬖", "毖", "跸", "荸", "蓖", "觱", "荜", "吡", "濞", "邲", "秕", "襞", "狴", "沘", "佖", "苾", "芘", "珌", "萆", "铋", "舭", "庳", "滗", "诐", "赑", "箅", "鲾", "坒", "咇", "皕", "馝"], "bian": ["便", "变", "边", "编", "遍", "辩", "辨", "鞭", "扁", "贬", "辫", "汴", "蝙", "卞", "匾", "砭", "弁", "褊", "笾", "忭", "煸", "苄", "鳊", "抃", "萹", "碥", "𨚕", "昪"], "biao": ["表", "标", "镖", "彪", "婊", "飙", "镳", "裱", "膘", "骠", "杓", "摽", "儦", "鳔", "瀌", "飑", "俵", "骉", "幖", "熛", "瘭", "藨", "脿"], "bie": ["别", "憋", "瘪", "鳖", "蹩", "癿"], "bin": ["宾", "彬", "滨", "鬓", "斌", "濒", "殡", "缤", "膑", "摈", "槟", "镔", "傧", "豳", "髌", "邠", "玢"], "bing": ["并", "兵", "病", "冰", "柄", "屏", "饼", "禀", "秉", "丙", "炳", "摒", "槟", "昺", "邴", "蛃"], "bo": ["伯", "波", "博", "薄", "播", "勃", "柏", "拨", "玻", "剥", "泊", "卜", "脖", "驳", "搏", "膊", "帛", "蕃", "钵", "礴", "簸", "跛", "渤", "舶", "箔", "菠", "擘", "钹", "饽", "啵", "亳", "檗", "鹁", "踣", "铂", "镈", "浡", "桲", "嶓", "艴", "欂", "僰", "砵", "哱", "𬭛", "袯", "鲌", "馞"], "bu": ["不", "部", "步", "布", "补", "捕", "堡", "怖", "卜", "簿", "哺", "埠", "卟", "埔", "逋", "瓿", "晡", "钚", "醭", "埗", "蔀", "𬷕"], "ca": ["擦", "嚓"], "cai": ["才", "采", "材", "彩", "财", "菜", "猜", "裁", "蔡", "踩", "睬", "偲"], "can": ["参", "残", "惨", "餐", "灿", "惭", "蚕", "粲", "璨", "骖", "黪", "䅟"], "cang": ["藏", "苍", "沧", "仓", "舱", "伧", "鸧"], "cao": ["草", "操", "曹", "糙", "槽", "嘈", "漕", "螬", "艚", "𥕢"], "ce": ["策", "侧", "测", "册", "厕", "恻"], "cen": ["参", "岑", "涔"], "ceng": ["曾", "层", "蹭", "噌", "嶒"], "cha": ["差", "查", "察", "茶", "插", "刹", "叉", "诧", "岔", "喳", "嚓", "茬", "搽", "杈", "碴", "衩", "槎", "姹", "锸", "汊", "猹", "馇", "檫", "镲", "垞", "侘", "嵖", "𥻗", "蹅"], "chai": ["差", "柴", "拆", "钗", "豺", "侪", "虿", "瘥", "茝"], "chan": ["产", "单", "颤", "缠", "禅", "阐", "蝉", "忏", "铲", "搀", "掺", "蟾", "潺", "谗", "馋", "谄", "孱", "婵", "澶", "羼", "廛", "觇", "啴", "襜", "浐", "巉", "冁", "刬", "骣", "蒇", "镡", "镵", "梴", "儳", "躔", "辿", "瀍", "旵", "𬊤", "韂"], "chang": ["长", "常", "场", "唱", "尝", "厂", "昌", "畅", "倡", "肠", "偿", "怅", "敞", "娼", "嫦", "猖", "徜", "昶", "鬯", "阊", "伥", "氅", "菖", "惝", "苌", "鲳", "鲿", "𬬮"], "chao": ["朝", "超", "潮", "抄", "吵", "嘲", "炒", "钞", "巢", "绰", "晁", "焯", "怊", "弨", "耖"], "che": ["车", "彻", "尺", "扯", "撤", "澈", "掣", "坼", "砗", "㬚"], "chen": ["称", "陈", "沉", "臣", "尘", "晨", "趁", "辰", "衬", "嗔", "忱", "琛", "谶", "谌", "宸", "碜", "郴", "抻", "瞋", "榇", "龀", "煁", "疢", "𬘭", "棽", "梣"], "cheng": ["成", "程", "城", "称", "承", "盛", "诚", "乘", "呈", "撑", "澄", "惩", "丞", "逞", "秤", "骋", "铛", "橙", "瞠", "铖", "晟", "枨", "裎", "酲", "柽", "塍", "蛏", "澂", "偁", "埕", "琤", "赪", "憕", "宬", "珹", "珵", "庱", "牚"], "chi": ["吃", "持", "迟", "尺", "赤", "痴", "池", "斥", "耻", "齿", "驰", "匙", "翅", "嗤", "炽", "侈", "叱", "哧", "弛", "蚩", "敕", "啻", "笞", "饬", "魑", "踟", "鸱", "褫", "媸", "墀", "螭", "豉", "彳", "瘛", "篪", "傺", "摛", "漦", "眵", "茌", "𫄨", "瓻", "胣", "痓"], "chong": ["种", "重", "冲", "充", "崇", "虫", "涌", "宠", "憧", "忡", "舂", "铳", "艟", "茺", "㳘", "珫", "翀", "摏", "漴"], "chou": ["抽", "仇", "愁", "丑", "臭", "筹", "酬", "畴", "绸", "踌", "瞅", "惆", "稠", "俦", "雠", "瘳", "帱", "杻", "犨", "椆", "侴"], "chu": ["出", "处", "楚", "除", "初", "触", "础", "厨", "储", "畜", "橱", "躇", "锄", "褚", "杵", "雏", "矗", "搐", "黜", "怵", "刍", "绌", "楮", "蹰", "蜍", "樗", "滁", "亍", "俶", "憷", "斶", "䢺", "䝙", "摴", "濋", "𬺓", "琡"], "chuai": ["揣", "踹", "啜", "搋"], "chuan": ["传", "穿", "船", "川", "串", "喘", "钏", "椽", "舛", "遄", "氚"], "chuang": ["创", "床", "窗", "闯", "幢", "疮", "怆", "噇"], "chui": ["吹", "垂", "锤", "捶", "炊", "槌", "陲", "棰", "倕", "圌"], "chun": ["春", "纯", "唇", "蠢", "淳", "醇", "椿", "莼", "鹑", "蝽", "堾", "瑃", "䲠", "𬭚"], "chuo": ["戳", "绰", "啜", "辍", "龊", "踔", "惙", "逴"], "ci": ["此", "次", "词", "差", "刺", "辞", "慈", "兹", "赐", "茨", "磁", "瓷", "祠", "伺", "疵", "雌", "呲", "茈", "鹚", "泚", "糍", "佽", "玼", "跐", "𫚖", "莿"], "cong": ["从", "丛", "聪", "匆", "葱", "囱", "淙", "琮", "骢", "枞", "苁", "悰", "璁", "熜"], "cou": ["凑", "辏", "腠"], "cu": ["粗", "促", "卒", "醋", "簇", "蹙", "猝", "蹴", "徂", "殂", "蔟"], "cuan": ["窜", "攒", "篡", "蹿", "撺", "爨", "汆", "镩"], "cui": ["翠", "脆", "粹", "催", "崔", "摧", "悴", "萃", "啐", "瘁", "璀", "淬", "毳", "榱", "漼", "缞"], "cun": ["存", "村", "寸", "忖", "邨", "皴"], "cuo": ["错", "措", "挫", "搓", "撮", "磋", "蹉", "锉", "厝", "嵯", "痤", "脞", "鹾", "矬", "瑳", "莝", "棤"], "da": ["大", "打", "达", "答", "搭", "鞑", "嗒", "瘩", "沓", "哒", "妲", "耷", "靼", "怛", "褡", "跶", "笪", "炟", "𨱏", "荙", "鿎", "𫟼", "溚", "垯"], "dai": ["大", "代", "带", "待", "呆", "袋", "戴", "黛", "歹", "贷", "逮", "岱", "殆", "怠", "玳", "傣", "迨", "骀", "呔", "绐", "埭", "轪", "垈", "叇"], "dan": ["但", "石", "单", "淡", "担", "弹", "丹", "胆", "蛋", "旦", "诞", "耽", "惮", "澹", "眈", "郸", "掸", "膻", "聃", "殚", "啖", "氮", "箪", "儋", "亶", "萏", "疸", "瘅", "憺", "赕", "𬘘", "𫢸", "疍"], "dang": ["当", "党", "荡", "挡", "档", "宕", "铛", "裆", "谠", "珰", "砀", "菪", "凼", "筜", "垱", "𣗋", "𬍡"], "dao": ["到", "道", "倒", "刀", "导", "岛", "盗", "蹈", "祷", "捣", "叨", "悼", "稻", "纛", "忉", "帱", "氘", "捯", "舠", "鱽"], "de": ["的", "地", "得", "德", "锝", "嘚"], "dei": ["得", "嘚"], "den": ["扽"], "deng": ["等", "登", "灯", "瞪", "邓", "澄", "凳", "蹬", "噔", "镫", "磴", "戥", "嶝", "璒"], "di": ["的", "地", "第", "提", "帝", "弟", "底", "低", "敌", "抵", "狄", "迪", "蒂", "滴", "递", "笛", "堤", "谛", "嘀", "缔", "邸", "涤", "翟", "嫡", "诋", "娣", "睇", "棣", "柢", "砥", "荻", "氐", "坻", "羝", "镝", "觌", "鞮", "杕", "籴", "骶", "蹢", "媂", "髢", "碲", "䃅", "𬱖", "茋", "玓", "菂", "𤧛", "禘", "䗖", "踶"], "dia": ["嗲"], "dian": ["点", "电", "典", "店", "殿", "颠", "奠", "垫", "甸", "淀", "癫", "巅", "惦", "玷", "掂", "滇", "踮", "佃", "钿", "簟", "靛", "碘", "坫", "阽", "癜", "扂", "琔"], "diao": ["调", "掉", "雕", "吊", "钓", "貂", "凋", "刁", "叼", "碉", "铫", "铞", "鲷", "汈", "窎"], "die": ["爹", "跌", "叠", "蝶", "碟", "迭", "谍", "喋", "牒", "耋", "堞", "蹀", "瓞", "垤", "鲽", "昳", "绖", "𫶇", "楪"], "ding": ["定", "丁", "顶", "订", "盯", "鼎", "钉", "叮", "锭", "町", "仃", "酊", "玎", "碇", "腚", "疔", "啶", "耵", "萣"], "diu": ["丢", "铥"], "dong": ["动", "东", "洞", "懂", "董", "冬", "冻", "栋", "咚", "峒", "恫", "胴", "侗", "氡", "硐", "胨", "岽", "鸫", "垌", "𬟽"], "dou": ["都", "读", "斗", "抖", "豆", "陡", "逗", "兜", "窦", "痘", "蚪", "钭", "蔸", "篼"], "du": ["都", "度", "读", "独", "毒", "杜", "督", "肚", "渡", "赌", "睹", "堵", "妒", "嘟", "笃", "渎", "牍", "蠹", "犊", "镀", "黩", "椟", "髑", "芏", "阇", "厾", "𬭊"], "duan": ["断", "段", "短", "端", "锻", "缎", "煅", "椴", "簖", "耑", "塅", "瑖"], "dui": ["对", "队", "堆", "兑", "怼", "碓", "祋"], "dun": ["顿", "盾", "敦", "蹲", "沌", "遁", "钝", "吨", "墩", "炖", "盹", "囤", "趸", "惇", "礅", "砘", "镦", "蹾"], "duo": ["多", "度", "夺", "躲", "朵", "堕", "舵", "踱", "哆", "咄", "铎", "惰", "跺", "剁", "掇", "驮", "垛", "裰", "哚", "亸", "埵", "剟", "㙍", "饳"], "e": ["阿", "恶", "俄", "哦", "额", "饿", "厄", "娥", "愕", "鹅", "扼", "峨", "萼", "噩", "鳄", "遏", "呃", "讹", "蛾", "鄂", "鹗", "婀", "颚", "锷", "谔", "垩", "莪", "轭", "屙", "欸", "腭", "苊", "锇", "涐", "姶", "堨", "崿", "𫫇", "𥔲"], "en": ["恩", "摁", "蒽"], "er": ["而", "二", "儿", "尔", "耳", "饵", "贰", "迩", "洱", "珥", "鸸", "铒", "陑", "耏", "鲕", "咡"], "fa": ["发", "法", "乏", "罚", "伐", "阀", "筏", "砝", "珐", "垡"], "fan": ["反", "翻", "饭", "范", "凡", "犯", "烦", "番", "繁", "泛", "返", "帆", "贩", "藩", "樊", "梵", "幡", "矾", "燔", "蘩", "璠", "畈", "钒", "氾", "墦", "𫔍", "𬸪", "蹯"], "fang": ["方", "放", "房", "仿", "防", "访", "芳", "妨", "坊", "纺", "肪", "舫", "枋", "鲂", "昉", "钫", "牥", "邡", "蚄"], "fei": ["非", "飞", "费", "废", "菲", "肥", "斐", "妃", "啡", "匪", "肺", "沸", "扉", "吠", "诽", "绯", "狒", "翡", "霏", "蜚", "腓", "悱", "芾", "淝", "痱", "鲱", "榧", "棐", "篚", "镄", "剕", "𬴂", "朏"], "fen": ["分", "份", "纷", "愤", "奋", "粉", "芬", "氛", "吩", "坟", "焚", "粪", "忿", "汾", "鼢", "棻", "酚", "棼", "偾", "鲼", "玢", "豮", "翂", "𣸣", "坋", "瀵"], "feng": ["风", "封", "凤", "峰", "丰", "锋", "疯", "奉", "冯", "讽", "枫", "逢", "缝", "蜂", "烽", "俸", "酆", "沣", "葑", "唪", "砜", "沨", "崶", "浲", "赗"], "fo": ["佛"], "fou": ["否", "缶"], "fu": ["复", "夫", "父", "服", "佛", "富", "府", "福", "妇", "负", "付", "副", "附", "幅", "符", "伏", "浮", "弗", "扶", "腐", "赋", "傅", "抚", "腹", "肤", "甫", "覆", "赴", "咐", "俯", "缚", "拂", "芙", "辅", "斧", "敷", "俘", "宓", "袱", "蝠", "腑", "砆", "脯", "阜", "孚", "驸", "辐", "孵", "馥", "釜", "匐", "凫", "蜉", "苻", "拊", "黻", "芾", "讣", "茯", "怫", "涪", "桴", "郛", "蝮", "茀", "绂", "趺", "鲋", "鄜", "氟", "菔", "麸", "罘", "蚨", "黼", "莩", "跗", "祓", "芣", "绋", "赙", "稃", "幞", "垺", "呋", "滏", "玞", "𫓧", "韨", "洑", "琈", "榑", "㕮", "𫖯", "簠", "㳇"], "ga": ["夹", "咖", "尬", "伽", "嘎", "戛", "噶", "旮", "尕", "钆", "尜"], "gai": ["该", "改", "概", "盖", "丐", "芥", "溉", "钙", "赅", "垓", "陔", "荄", "晐", "𬮿", "戤"], "gan": ["感", "干", "敢", "赶", "甘", "杆", "尴", "肝", "竿", "绀", "橄", "赣", "矸", "柑", "秆", "淦", "擀", "苷", "旰", "玕", "泔", "坩", "疳", "澉", "酐", "虷", "鳡", "㽏"], "gang": ["刚", "港", "钢", "纲", "岗", "缸", "冈", "扛", "杠", "罡", "肛", "戆", "矼", "冮", "㭎", "堽", "鿍", "筻"], "gao": ["高", "告", "稿", "搞", "糕", "膏", "皋", "羔", "镐", "诰", "槁", "篙", "缟", "睾", "郜", "杲", "藁", "槔", "锆", "筶"], "ge": ["个", "合", "格", "各", "革", "哥", "歌", "盖", "隔", "阁", "割", "葛", "戈", "搁", "胳", "咯", "鸽", "疙", "蛤", "骼", "嗝", "舸", "硌", "鬲", "铬", "膈", "虼", "仡", "圪", "镉", "哿", "袼", "饹", "塥", "滆"], "gei": ["给"], "gen": ["跟", "根", "亘", "艮", "哏", "茛"], "geng": ["更", "颈", "耕", "耿", "庚", "哽", "梗", "羹", "埂", "赓", "鲠", "绠", "浭", "鹒", "𬒔", "暅"], "gong": ["公", "工", "功", "共", "宫", "攻", "供", "贡", "恭", "弓", "躬", "拱", "巩", "龚", "蚣", "觥", "肱", "汞", "珙", "䢼", "硔"], "gou": ["句", "够", "构", "狗", "勾", "购", "沟", "钩", "苟", "垢", "篝", "诟", "佝", "媾", "觏", "彀", "枸", "缑", "笱", "遘", "鞲", "岣", "耇", "雊", "姤"], "gu": ["古", "故", "顾", "姑", "骨", "股", "孤", "固", "贾", "鼓", "谷", "估", "辜", "咕", "雇", "蛊", "锢", "诂", "沽", "呱", "箍", "汩", "菇", "鸪", "梏", "鹄", "鹘", "牯", "痼", "瞽", "毂", "菰", "嘏", "觚", "轱", "蛄", "罟", "榖", "钴", "酤", "崮", "羖", "鲴", "牿", "臌", "蓇", "𦙶", "馉", "瀔", "堌"], "gua": ["挂", "瓜", "寡", "刮", "卦", "褂", "呱", "剐", "鸹", "诖", "栝", "胍", "坬"], "guai": ["怪", "乖", "拐", "掴", "夬"], "guan": ["关", "观", "管", "官", "馆", "惯", "贯", "冠", "灌", "棺", "罐", "莞", "纶", "倌", "鹳", "掼", "盥", "鳏", "琯", "涫", "筦", "瓘", "蒄", "鳤", "毌", "祼", "爟"], "guang": ["光", "广", "逛", "犷", "咣", "胱", "洸", "桄", "珖", "垙", "𨐈"], "gui": ["规", "鬼", "归", "贵", "桂", "跪", "柜", "龟", "诡", "瑰", "轨", "闺", "圭", "炅", "桧", "皈", "癸", "刽", "硅", "妫", "庋", "刿", "晷", "鲑", "簋", "珪", "鳜", "宄", "邽", "匦", "姽", "鬶", "筀"], "gun": ["滚", "棍", "衮", "鲧", "绲", "辊", "磙"], "guo": ["过", "国", "果", "郭", "锅", "裹", "涡", "虢", "聒", "蝈", "帼", "椁", "呙", "蜾", "馘", "崞", "埚", "馃", "粿", "𬇹", "腘"], "ha": ["哈", "蛤", "铪"], "hai": ["还", "海", "孩", "害", "咳", "骇", "亥", "骸", "嗨", "醢", "氦", "嗐", "咍", "胲"], "han": ["汉", "含", "寒", "喊", "韩", "汗", "憾", "翰", "涵", "罕", "函", "撼", "悍", "酣", "旱", "颔", "捍", "憨", "晗", "瀚", "鼾", "邯", "菡", "焊", "顸", "邗", "犴", "蚶", "焓", "暵", "扞", "虷", "浛", "琀", "崡", "嵅", "蔊", "㘎", "垾", "撖"], "hang": ["行", "航", "巷", "杭", "吭", "夯", "沆", "颃", "绗"], "hao": ["好", "号", "毫", "豪", "浩", "耗", "郝", "嚎", "皓", "壕", "灏", "颢", "蒿", "嗥", "昊", "貉", "濠", "蚝", "嚆", "薅", "皞", "淏", "鄗"], "he": ["和", "何", "合", "喝", "河", "吓", "呵", "赫", "核", "盒", "贺", "荷", "鹤", "诃", "褐", "阖", "壑", "禾", "劾", "嗬", "涸", "阂", "曷", "颌", "纥", "貉", "龢", "翮", "盍", "菏", "鹖", "熇", "翯", "鞨", "郃", "龁", "饸", "盉", "𬌗", "垎", "隺"], "hei": ["黑", "嘿", "𬭶"], "hen": ["很", "恨", "狠", "痕", "𬣳"], "heng": ["行", "横", "衡", "哼", "恒", "亨", "蘅", "珩", "桁", "姮", "鸻", "堼"], "hng": ["哼"], "hong": ["红", "洪", "宏", "轰", "鸿", "虹", "哄", "弘", "烘", "泓", "闳", "讧", "薨", "蕻", "訇", "翃", "唝", "黉", "竑", "纮", "吽", "玒", "荭", "𫟹", "𬭎", "谼"], "hou": ["后", "候", "厚", "侯", "吼", "喉", "猴", "逅", "篌", "堠", "鲎", "糇", "瘊", "骺", "郈", "垕", "齁", "𬭤", "鲘"], "hu": ["和", "乎", "胡", "忽", "呼", "护", "湖", "互", "狐", "户", "虎", "糊", "核", "沪", "壶", "蝴", "葫", "惚", "唬", "浒", "弧", "扈", "笏", "瑚", "琥", "鹄", "祜", "鹘", "斛", "囫", "瓠", "猢", "唿", "醐", "怙", "觳", "滹", "鹕", "槲", "岵", "煳", "縠", "鄠", "戽", "冱", "烀", "鹱", "昒", "轷", "淴", "昈", "嫭", "鳠"], "hua": ["话", "化", "花", "华", "画", "划", "滑", "哗", "猾", "桦", "骅", "砉", "铧", "婳", "觟"], "huai": ["怀", "坏", "淮", "徊", "槐", "踝"], "huan": ["还", "欢", "环", "换", "缓", "幻", "唤", "患", "焕", "桓", "宦", "鬟", "痪", "寰", "浣", "涣", "豢", "奂", "圜", "獾", "郇", "洹", "漶", "缳", "逭", "擐", "萑", "锾", "鲩", "貆", "鹮", "荁", "峘", "𬘫", "澴", "𤩽", "镮", "㬊"], "huang": ["黄", "皇", "荒", "晃", "慌", "惶", "恍", "谎", "煌", "凰", "幌", "徨", "璜", "簧", "蝗", "遑", "潢", "隍", "肓", "湟", "篁", "蟥", "喤", "鳇", "滉", "媓", "瑝", "锽", "艎", "𨱑", "癀", "㿠"], "hui": ["会", "回", "挥", "灰", "毁", "绘", "悔", "慧", "汇", "辉", "恢", "惠", "溃", "徽", "讳", "晦", "秽", "晖", "贿", "诲", "蕙", "卉", "烩", "麾", "诙", "桧", "荟", "喙", "彗", "恚", "蛔", "洄", "茴", "虺", "隳", "咴", "蟪", "翚", "哕", "翙", "浍", "袆", "硊", "㧑", "烠", "𬤝", "橞", "𬭬"], "hun": ["婚", "魂", "混", "昏", "浑", "荤", "馄", "诨", "阍", "溷", "珲", "惛", "碈"], "huo": ["和", "活", "或", "火", "获", "伙", "惑", "货", "霍", "祸", "豁", "夥", "镬", "嚯", "藿", "蠖", "濩", "攉", "锪", "佸", "耠", "嚄", "𬴃", "劐", "钬", "漷", "㸌"], "ji": ["己", "几", "给", "记", "系", "及", "机", "期", "即", "极", "济", "集", "基", "奇", "计", "纪", "击", "急", "既", "际", "级", "激", "继", "技", "辑", "迹", "积", "忌", "吉", "籍", "鸡", "寂", "寄", "季", "疾", "姬", "挤", "祭", "绩", "肌", "妓", "饥", "藉", "稷", "讥", "稽", "圾", "剂", "脊", "嫉", "汲", "棘", "羁", "戟", "叽", "冀", "畸", "唧", "悸", "伎", "缉", "嵇", "笈", "髻", "亟", "矶", "霁", "箕", "骥", "偈", "岌", "玑", "暨", "跻", "瘠", "觊", "蓟", "畿", "屐", "乩", "楫", "殛", "蒺", "荠", "赍", "鲫", "犄", "笄", "芰", "戢", "佶", "麂", "齑", "洎", "跽", "芨", "剞", "虮", "掎", "墼", "蕺", "姞", "鹡", "嵴", "罽", "伋", "蹐", "垍", "漈", "鲚", "枅", "𬯀", "𫓯", "𫓹", "𫌀", "觭", "堲", "㴔", "耤", "鱾", "𪟝", "徛", "惎", "穄", "𬶨", "𬶭", "瀱"], "jia": ["家", "加", "价", "假", "架", "贾", "甲", "佳", "夹", "驾", "嫁", "嘉", "颊", "迦", "伽", "稼", "茄", "枷", "戛", "袈", "葭", "笳", "浃", "珈", "胛", "荚", "钾", "岬", "痂", "郏", "铗", "蛱", "跏", "斝", "恝", "瘕", "镓", "泇", "𬂩", "槚"], "jian": ["见", "间", "剑", "件", "建", "简", "渐", "坚", "肩", "尖", "健", "监", "检", "践", "减", "箭", "舰", "兼", "鉴", "奸", "艰", "键", "剪", "贱", "荐", "捡", "溅", "笺", "拣", "煎", "谏", "俭", "槛", "茧", "涧", "歼", "翦", "缄", "饯", "柬", "僭", "睑", "蹇", "碱", "謇", "锏", "蒹", "趼", "毽", "犍", "菅", "腱", "缣", "戋", "鞯", "戬", "鲣", "笕", "湔", "搛", "谫", "裥", "鹣", "枧", "篯", "鞬", "牮", "踺", "鳒", "暕", "𬣡", "楗"], "jiang": ["将", "强", "江", "讲", "降", "奖", "僵", "蒋", "姜", "虹", "匠", "疆", "浆", "酱", "绛", "桨", "缰", "犟", "洚", "糨", "豇", "礓", "耩", "茳", "膙", "鳉", "弶"], "jiao": ["教", "觉", "叫", "交", "较", "校", "脚", "角", "焦", "娇", "骄", "郊", "轿", "嚼", "胶", "搅", "狡", "矫", "绞", "浇", "蕉", "椒", "缴", "侥", "剿", "窖", "跤", "皎", "蛟", "佼", "饺", "礁", "酵", "鹪", "醮", "姣", "峤", "铰", "鲛", "徼", "湫", "茭", "皦", "噍", "敫", "艽", "燋", "僬", "皭", "藠", "峧", "䴔", "恔", "璬", "滘", "斠", "漖"], "jie": ["解", "结", "界", "接", "价", "节", "姐", "阶", "借", "介", "街", "杰", "皆", "洁", "揭", "戒", "截", "劫", "捷", "竭", "藉", "届", "诫", "楷", "桀", "睫", "诘", "颉", "嗟", "芥", "桔", "婕", "孑", "碣", "讦", "拮", "羯", "秸", "喈", "疥", "蚧", "玠", "骱", "疖", "絜", "鲒", "劼", "湝", "岊", "㛃", "蜐", "檞", "悈", "褯"], "jin": ["进", "今", "金", "近", "尽", "紧", "仅", "禁", "劲", "晋", "津", "锦", "谨", "筋", "斤", "巾", "瑾", "浸", "襟", "矜", "烬", "噤", "靳", "觐", "缙", "堇", "槿", "馑", "衿", "妗", "荩", "廑", "琎", "卺", "赆", "溍", "墐", "祲", "瑨", "殣", "浕", "𬬱", "珒"], "jing": ["经", "精", "竟", "惊", "景", "境", "京", "静", "睛", "警", "劲", "敬", "镜", "靖", "净", "径", "竞", "晶", "井", "颈", "荆", "阱", "兢", "婧", "迳", "菁", "茎", "憬", "鲸", "旌", "泾", "靓", "痉", "胫", "儆", "璟", "粳", "刭", "獍", "肼", "鼱", "倞", "腈", "猄", "䴖", "麖", "汫", "璥", "竫"], "jiong": ["窘", "炯", "迥", "炅", "扃", "冏", "坰", "泂", "颎", "𬳶", "䌹"], "jiu": ["就", "九", "究", "久", "酒", "旧", "救", "纠", "舅", "鸠", "揪", "疚", "咎", "臼", "鹫", "啾", "厩", "柩", "灸", "赳", "韭", "玖", "阄", "桕", "僦", "鬏", "氿", "㠇"], "ju": ["句", "车", "具", "据", "居", "举", "剧", "局", "巨", "聚", "距", "惧", "拒", "俱", "柜", "矩", "拘", "菊", "鞠", "沮", "咀", "锯", "驹", "橘", "踞", "炬", "遽", "掬", "狙", "钜", "倨", "飓", "踽", "雎", "趄", "裾", "龃", "讵", "莒", "疽", "枸", "苴", "苣", "鞫", "琚", "榉", "屦", "椐", "窭", "锔", "醵", "秬", "焗", "筥", "砠", "岠", "蒟", "弆", "犋", "岨", "泃", "崌", "娵", "腒", "𬶋", "䴗", "澽"], "juan": ["卷", "圈", "倦", "娟", "捐", "眷", "鹃", "绢", "隽", "涓", "镌", "锩", "狷", "蠲", "鄄", "焆", "桊"], "jue": ["觉", "绝", "决", "角", "爵", "掘", "诀", "嚼", "抉", "崛", "厥", "倔", "攫", "撅", "谲", "獗", "蹶", "噘", "珏", "矍", "蕨", "橛", "桷", "爝", "孓", "劂", "玦", "镢", "砄", "觖", "傕", "𫘝", "㵐", "𫔎", "玃"], "jun": ["军", "君", "均", "俊", "龟", "钧", "郡", "峻", "骏", "筠", "菌", "浚", "竣", "捃", "麇", "皲", "畯", "珺", "莙", "鲪", "晙", "焌", "葰", "䐃"], "ka": ["卡", "咖", "喀", "咯", "咔", "胩"], "kai": ["开", "凯", "慨", "楷", "恺", "铠", "揩", "锴", "忾", "剀", "闿", "锎", "垲", "蒈", "炌"], "kan": ["看", "刊", "堪", "砍", "坎", "侃", "勘", "槛", "瞰", "龛", "戡", "阚", "衎", "嵁", "崁", "莰", "墈", "磡"], "kang": ["康", "抗", "慷", "扛", "亢", "炕", "糠", "伉", "闶", "钪", "𡐓", "𩾌"], "kao": ["考", "靠", "烤", "拷", "铐", "犒", "尻", "栲", "洘", "㸆"], "ke": ["可", "克", "科", "刻", "客", "课", "柯", "颗", "渴", "咳", "棵", "磕", "珂", "壳", "恪", "苛", "坷", "蝌", "轲", "窠", "瞌", "嗑", "颏", "溘", "疴", "锞", "稞", "髁", "岢", "缂", "氪", "牁", "骒", "匼", "炣"], "kei": ["剋"], "ken": ["肯", "恳", "啃", "垦", "裉"], "keng": ["坑", "吭", "铿", "硁"], "kong": ["空", "恐", "孔", "控", "崆", "箜", "倥", "埪", "硿"], "kou": ["口", "扣", "寇", "叩", "抠", "蔻", "芤", "筘", "眍", "𫸩"], "ku": ["苦", "哭", "库", "裤", "酷", "枯", "窟", "骷", "绔", "喾", "刳", "矻", "圐"], "kua": ["夸", "跨", "垮", "胯", "挎", "侉", "姱"], "kuai": ["会", "快", "块", "筷", "脍", "侩", "狯", "蒯", "哙", "鲙", "郐", "㧟"], "kuan": ["宽", "款", "髋"], "kuang": ["况", "狂", "框", "旷", "矿", "眶", "匡", "筐", "诳", "邝", "哐", "诓", "圹", "贶", "纩", "夼", "洭", "𫛭"], "kui": ["亏", "愧", "溃", "窥", "魁", "奎", "盔", "馈", "葵", "睽", "逵", "夔", "匮", "喟", "傀", "揆", "聩", "馗", "篑", "岿", "暌", "愦", "悝", "蝰", "蒉", "跬", "骙", "櫆", "喹", "戣", "𫠆", "煃"], "kun": ["困", "昆", "坤", "捆", "琨", "鲲", "髡", "阃", "锟", "焜", "悃", "堃", "裈", "鹍", "醌", "婫", "壸"], "kuo": ["括", "阔", "扩", "廓", "蛞"], "la": ["拉", "落", "啦", "腊", "辣", "喇", "蜡", "垃", "剌", "邋", "旯", "瘌", "镴", "砬", "鞡", "蝲", "𬶟"], "lai": ["来", "莱", "赖", "癞", "籁", "睐", "徕", "濑", "涞", "赉", "崃", "铼", "俫", "梾"], "lan": ["兰", "蓝", "烂", "拦", "懒", "栏", "览", "滥", "澜", "岚", "篮", "揽", "婪", "阑", "缆", "斓", "褴", "榄", "谰", "罱", "镧", "𬒗", "襕", "漤"], "lang": ["郎", "浪", "朗", "狼", "廊", "琅", "螂", "啷", "榔", "阆", "锒", "蒗", "莨", "稂", "桹", "筤", "烺", "蓢", "塱", "㮾", "埌", "崀", "㫰"], "lao": ["老", "落", "劳", "牢", "络", "姥", "捞", "唠", "佬", "烙", "酪", "痨", "涝", "醪", "崂", "嫪", "栳", "铹", "铑", "耢", "𫭼", "荖"], "le": ["了", "乐", "勒", "叻", "泐", "仂", "鳓", "饹", "簕"], "lei": ["类", "雷", "泪", "勒", "累", "蕾", "垒", "磊", "肋", "擂", "儡", "镭", "羸", "耒", "诔", "嫘", "嘞", "酹", "礌", "缧", "罍", "藟", "檑", "癗"], "leng": ["冷", "愣", "楞", "棱", "崚", "塄", "堎"], "li": ["里", "理", "力", "立", "历", "利", "离", "李", "例", "礼", "丽", "厉", "黎", "璃", "励", "隶", "莉", "吏", "粒", "漓", "梨", "狸", "栗", "哩", "厘", "篱", "俐", "沥", "雳", "犁", "蠡", "戾", "笠", "鲤", "砾", "荔", "鹂", "俚", "砺", "骊", "俪", "痢", "罹", "藜", "唳", "郦", "溧", "蛎", "逦", "喱", "醴", "詈", "莅", "栎", "呖", "娌", "枥", "嫠", "鬲", "傈", "澧", "疠", "蜊", "篥", "缡", "黧", "粝", "猁", "鳢", "疬", "轹", "锂", "跞", "醨", "蓠", "鲡", "苈", "坜", "浬", "㰀", "朸", "𫵷", "𬍛", "珕", "浰", "凓"], "lia": ["俩"], "lian": ["连", "脸", "联", "练", "恋", "怜", "莲", "炼", "廉", "帘", "链", "琏", "敛", "涟", "镰", "殓", "濂", "奁", "潋", "楝", "裣", "裢", "蠊", "鲢", "蔹", "梿", "浰", "瑓", "𬶠"], "liang": ["两", "量", "亮", "良", "梁", "凉", "俩", "辆", "谅", "粮", "踉", "晾", "粱", "靓", "椋", "魉", "莨", "悢", "俍", "𫟅", "辌", "墚", "𬜯"], "liao": ["了", "料", "聊", "疗", "僚", "辽", "寥", "廖", "撩", "缭", "潦", "撂", "镣", "燎", "獠", "蓼", "嘹", "寮", "嫽", "瞭", "鹩", "尥", "憭", "钌", "漻", "蹽", "橑", "簝", "髎", "𪤗"], "lie": ["列", "烈", "裂", "猎", "劣", "咧", "冽", "趔", "洌", "鬣", "捩", "埒", "躐", "峛", "䴕", "脟", "𫚭"], "lin": ["林", "临", "邻", "淋", "琳", "霖", "凛", "麟", "拎", "鳞", "吝", "躏", "磷", "粼", "嶙", "赁", "蔺", "遴", "廪", "懔", "辚", "璘", "檩", "瞵", "啉", "潾", "膦", "箖", "𬴊", "𬭸", "翷"], "ling": ["令", "领", "灵", "另", "凌", "零", "玲", "龄", "陵", "菱", "铃", "岭", "伶", "棱", "聆", "绫", "翎", "羚", "苓", "泠", "呤", "囹", "瓴", "棂", "蛉", "酃", "鲮", "柃", "鸰", "舲", "澪", "祾", "坽", "姈", "昤", "㥄"], "liu": ["流", "六", "留", "陆", "刘", "柳", "溜", "碌", "琉", "浏", "榴", "瘤", "硫", "遛", "绺", "馏", "骝", "鎏", "旒", "镏", "熘", "鹨", "镠", "罶", "飗", "疁", "锍", "鹠", "瑬", "珋"], "lo": ["咯"], "long": ["龙", "弄", "隆", "笼", "胧", "拢", "垄", "咙", "聋", "珑", "陇", "窿", "栊", "茏", "泷", "眬", "砻", "癃", "哢", "昽", "漋", "𬕂"], "lou": ["楼", "露", "漏", "搂", "陋", "娄", "喽", "髅", "篓", "镂", "偻", "蝼", "蒌", "嵝", "耧", "瘘", "䁖", "剅", "𪣻", "溇", "𦝼"], "lu": ["路", "陆", "露", "鲁", "录", "卢", "绿", "鹿", "炉", "芦", "碌", "庐", "禄", "虏", "戮", "泸", "噜", "璐", "颅", "掳", "漉", "麓", "赂", "卤", "鹭", "辘", "蕗", "橹", "鲈", "撸", "渌", "潞", "逯", "胪", "垆", "辂", "鸬", "轳", "舻", "箓", "簏", "栌", "氇", "镥", "甪", "琭", "僇", "𬬻", "澛", "菉", "𫘧", "稑", "勠"], "luan": ["乱", "卵", "鸾", "峦", "挛", "栾", "孪", "銮", "娈", "滦", "脔"], "lun": ["论", "伦", "轮", "仑", "沦", "抡", "纶", "囵", "𬬭", "𫭢"], "luo": ["落", "罗", "洛", "逻", "络", "裸", "骆", "咯", "萝", "螺", "烙", "锣", "骡", "啰", "捋", "摞", "箩", "荦", "猡", "珞", "雒", "椤", "蠃", "倮", "瘰", "漯", "泺", "脶", "蓏"], "lv": ["律", "虑", "率", "绿", "旅", "吕", "屡", "缕", "侣", "履", "驴", "滤", "捋", "闾", "褛", "榈", "偻", "铝", "膂", "氯", "稆", "𦝼", "梠", "垏", "葎"], "lve": ["略", "掠", "锊", "䂮", "圙"], "m": ["呒", "呣"], "ma": ["马", "吗", "妈", "骂", "麻", "摩", "嘛", "玛", "码", "抹", "蚂", "蟆", "杩", "犸", "祃"], "mai": ["买", "卖", "麦", "脉", "埋", "迈", "霾", "劢", "荬", "唛", "鿏"], "man": ["满", "慢", "漫", "曼", "埋", "蛮", "瞒", "蔓", "馒", "幔", "谩", "缦", "鳗", "颟", "螨", "嫚", "墁", "鞔", "镘", "鬘", "𬜬"], "mang": ["忙", "茫", "芒", "盲", "莽", "氓", "蟒", "邙", "漭", "硭", "厖", "尨", "牤", "杧", "牻"], "mao": ["毛", "貌", "矛", "冒", "猫", "帽", "茅", "贸", "茂", "髦", "卯", "锚", "懋", "袤", "耄", "瑁", "旄", "昴", "牦", "蟊", "峁", "铆", "瞀", "泖", "茆", "蝥", "芼", "眊", "鄚", "楙"], "me": ["么"], "mei": ["没", "美", "每", "妹", "梅", "眉", "媚", "媒", "枚", "玫", "魅", "昧", "霉", "煤", "嵋", "湄", "寐", "楣", "糜", "袂", "莓", "酶", "镁", "浼", "镅", "郿", "渼", "鹛", "瑂", "媄"], "men": ["们", "门", "闷", "懑", "扪", "焖", "钔", "𫞩", "呇"], "meng": ["梦", "蒙", "猛", "孟", "盟", "萌", "朦", "懵", "檬", "虻", "蜢", "锰", "蠓", "勐", "甍", "瞢", "艋", "艨", "幪", "獴", "𫑡", "㠓", "鹲", "礞"], "mi": ["密", "迷", "米", "秘", "弥", "蜜", "谜", "咪", "眯", "觅", "靡", "宓", "泌", "谧", "糜", "弭", "麋", "汨", "祢", "祕", "猕", "蘼", "醚", "縻", "幂", "芈", "敉", "嘧", "脒", "洣", "蓂", "醾"], "mian": ["面", "免", "勉", "绵", "眠", "棉", "缅", "冕", "腼", "湎", "娩", "丏", "沔", "眄", "渑", "勔", "偭", "愐", "𩾃"], "miao": ["妙", "描", "庙", "苗", "秒", "缪", "渺", "瞄", "缈", "喵", "藐", "邈", "淼", "眇", "杪", "鹋"], "mie": ["灭", "蔑", "咩", "篾", "乜"], "min": ["民", "敏", "悯", "闵", "闽", "抿", "泯", "皿", "岷", "珉", "缗", "愍", "黾", "旻", "湣", "忞", "苠", "鳘"], "ming": ["明", "名", "命", "鸣", "冥", "铭", "溟", "茗", "瞑", "暝", "酩", "螟", "洺"], "miu": ["谬", "缪"], "mo": ["没", "无", "万", "模", "莫", "魔", "默", "末", "麽", "摸", "摩", "墨", "磨", "脉", "抹", "漠", "陌", "寞", "沫", "蓦", "膜", "摹", "嬷", "谟", "茉", "殁", "蘑", "馍", "秣", "嫫", "瘼", "貊", "镆", "貘", "靺", "耱", "藦", "𬙊"], "mou": ["某", "谋", "缪", "眸", "牟", "侔", "哞", "鍪", "蛑"], "mu": ["目", "母", "木", "模", "姆", "幕", "慕", "穆", "墓", "牧", "暮", "沐", "牡", "拇", "牟", "亩", "募", "睦", "苜", "仫", "钼", "毪", "𬭁", "𧿹"], "na": ["那", "南", "哪", "拿", "纳", "娜", "呐", "衲", "捺", "钠", "镎", "肭", "乸", "𦰡"], "nai": ["乃", "奶", "奈", "耐", "鼐", "氖", "艿", "迺", "柰", "萘", "佴", "耏"], "nan": ["难", "男", "南", "喃", "楠", "囡", "赧", "腩", "蝻", "萳", "婻"], "nang": ["囊", "囔", "曩", "馕", "攮", "齉"], "nao": ["脑", "闹", "恼", "挠", "瑙", "淖", "呶", "猱", "孬", "铙", "蛲", "峱", "垴", "硇", "臑"], "ne": ["呢", "哪", "讷"], "nei": ["内", "馁"], "nen": ["嫩", "恁"], "neng": ["能"], "ni": ["你", "呢", "尼", "妮", "泥", "匿", "逆", "拟", "腻", "霓", "倪", "溺", "睨", "昵", "怩", "旎", "猊", "鲵", "伲", "麑", "薿", "坭", "铌", "𫐐", "𫠜", "𨺙"], "nian": ["年", "念", "粘", "拈", "廿", "黏", "捻", "碾", "撵", "辇", "蔫", "鲇", "埝"], "niang": ["娘", "酿"], "niao": ["鸟", "尿", "袅", "茑", "脲"], "nie": ["捏", "聂", "涅", "孽", "蹑", "嗫", "啮", "镊", "臬", "乜", "蘖", "镍", "陧", "颞", "糵", "嵲", "菍", "𫔶"], "nin": ["您"], "ning": ["宁", "凝", "狞", "拧", "柠", "佞", "泞", "咛", "甯", "苧", "聍"], "niu": ["牛", "扭", "纽", "妞", "拗", "钮", "忸", "狃", "杻"], "nong": ["农", "弄", "浓", "哝", "脓", "侬", "秾", "𬪩"], "nou": ["耨"], "nu": ["怒", "奴", "努", "弩", "驽", "孥", "胬", "砮", "笯", "傉"], "nuan": ["暖"], "nuo": ["诺", "娜", "挪", "懦", "喏", "糯", "傩", "搦", "锘", "𦰡"], "nv": ["女", "恧", "钕", "衄"], "nve": ["虐", "疟"], "o": ["哦", "噢"], "ou": ["区", "欧", "偶", "呕", "殴", "鸥", "藕", "讴", "瓯", "怄", "耦", "沤", "𬉼", "𫭟", "𠙶"], "pa": ["怕", "爬", "帕", "趴", "啪", "琶", "扒", "耙", "杷", "葩", "筢", "舥", "潖"], "pai": ["派", "排", "拍", "迫", "牌", "徘", "湃", "俳", "哌", "簰", "蒎"], "pan": ["判", "盘", "番", "胖", "叛", "盼", "潘", "攀", "畔", "蟠", "蹒", "磐", "爿", "泮", "槃", "袢", "襻", "磻"], "pang": ["旁", "胖", "膀", "庞", "彷", "磅", "乓", "滂", "螃", "逄", "耪", "雱", "鳑"], "pao": ["跑", "抛", "炮", "袍", "泡", "咆", "庖", "刨", "匏", "疱", "狍", "脬"], "pei": ["配", "陪", "佩", "培", "裴", "赔", "霈", "沛", "呸", "胚", "辔", "帔", "旆", "醅", "锫", "衃"], "pen": ["喷", "盆", "湓"], "peng": ["朋", "碰", "鹏", "捧", "彭", "蓬", "砰", "篷", "膨", "棚", "怦", "抨", "烹", "澎", "嘭", "堋", "硼", "芃", "蟛", "椪", "淜", "弸", "搒"], "pi": ["批", "否", "皮", "披", "屁", "匹", "疲", "辟", "脾", "劈", "譬", "僻", "啤", "琵", "癖", "霹", "丕", "痞", "媲", "毗", "睥", "噼", "坯", "枇", "纰", "陂", "砒", "邳", "圮", "嚭", "蚍", "鼙", "貔", "罴", "郫", "埤", "仳", "甓", "淠", "伾", "陴", "狉", "澼", "蜱", "铍", "𬳵", "鲏", "苉", "䴙"], "pian": ["便", "片", "篇", "偏", "骗", "扁", "翩", "骈", "谝", "胼", "蹁", "犏", "㛹", "楩", "𡎚"], "piao": ["飘", "票", "漂", "朴", "嫖", "瞟", "缥", "瓢", "剽", "骠", "殍", "嘌", "螵", "薸", "蔈"], "pie": ["瞥", "撇", "苤", "氕", "𬭯"], "pin": ["品", "贫", "拼", "频", "聘", "颦", "嫔", "姘", "牝", "玭", "𬞟"], "ping": ["平", "评", "凭", "瓶", "屏", "苹", "萍", "坪", "乒", "娉", "枰", "鲆", "俜", "洴", "荓", "涄", "泙", "玶", "帡", "蚲"], "po": ["破", "婆", "颇", "迫", "繁", "朴", "坡", "魄", "泊", "泼", "珀", "粕", "叵", "鄱", "皤", "钋", "笸", "桲", "酦", "钷", "䥽"], "pou": ["剖", "掊", "裒", "抔"], "pu": ["普", "扑", "铺", "朴", "谱", "堡", "仆", "浦", "菩", "葡", "蒲", "瀑", "噗", "圃", "脯", "曝", "璞", "溥", "匍", "濮", "埔", "莆", "蹼", "氆", "酺", "潽", "蒱", "墣", "镤", "穙", "镨"], "qi": ["起", "其", "气", "期", "七", "奇", "齐", "器", "企", "弃", "启", "妻", "骑", "岂", "旗", "欺", "汽", "凄", "契", "戚", "棋", "漆", "歧", "祈", "泣", "乞", "祁", "绮", "琪", "迄", "栖", "崎", "砌", "缉", "蹊", "亟", "俟", "琦", "祺", "麒", "淇", "杞", "耆", "憩", "脐", "岐", "萋", "圻", "嘁", "沏", "讫", "颀", "畦", "欹", "荠", "葺", "骐", "碛", "綦", "蕲", "屺", "鳍", "蛴", "祇", "萁", "芑", "棨", "柒", "芪", "锜", "跂", "亓", "汔", "槭", "埼", "桤", "蜞", "愭", "郪", "𨙸", "𬨂", "䓫", "鲯", "玘", "婍", "洓", "碶", "磜"], "qia": ["卡", "恰", "掐", "洽", "袷", "髂", "葜", "拤"], "qian": ["前", "千", "钱", "潜", "浅", "牵", "迁", "乾", "签", "欠", "谦", "遣", "歉", "纤", "倩", "茜", "虔", "谴", "铅", "嵌", "钳", "骞", "黔", "堑", "芊", "钎", "钤", "阡", "椠", "佥", "愆", "缱", "掮", "悭", "犍", "荨", "仟", "芡", "褰", "搴", "扦", "慊", "肷", "靬", "蒨", "伣", "汧", "鹐", "圲", "杄", "岍", "磏", "墘", "𬘬"], "qiang": ["强", "枪", "墙", "抢", "腔", "跄", "呛", "蔷", "羌", "锵", "戕", "襁", "樯", "戗", "嫱", "炝", "镪", "蜣", "玱", "锖", "羟", "蔃"], "qiao": ["瞧", "巧", "悄", "乔", "桥", "敲", "雀", "俏", "壳", "鞘", "窍", "侨", "翘", "峭", "憔", "樵", "跷", "撬", "诮", "锹", "橇", "谯", "峤", "荞", "愀", "鞒", "硗", "缲", "劁", "硚"], "qie": ["且", "切", "窃", "怯", "妾", "伽", "茄", "惬", "锲", "趄", "箧", "挈", "慊", "郄"], "qin": ["亲", "秦", "琴", "侵", "勤", "寝", "钦", "擒", "禽", "芹", "沁", "衾", "揿", "覃", "噙", "芩", "溱", "吣", "骎", "锓", "檎", "嗪", "嵚", "梣", "慬"], "qing": ["情", "清", "轻", "亲", "青", "请", "倾", "庆", "晴", "卿", "顷", "擎", "蜻", "磬", "氢", "罄", "綮", "氰", "黥", "檠", "鲭", "箐", "勍", "圊", "苘", "庼", "碃"], "qiong": ["穷", "琼", "穹", "邛", "茕", "蛩", "筇", "銎", "䓖"], "qiu": ["求", "秋", "球", "仇", "丘", "龟", "囚", "裘", "邱", "酋", "虬", "蚯", "俅", "糗", "遒", "鳅", "逑", "泅", "湫", "楸", "訄", "蝤", "犰", "璆", "鹙", "赇", "巯", "鞧", "萩", "𨱇", "鼽"], "qu": ["去", "取", "区", "曲", "趣", "屈", "趋", "驱", "娶", "躯", "渠", "觑", "戌", "瞿", "蛐", "岖", "蛆", "衢", "祛", "璩", "阒", "黢", "癯", "龋", "劬", "蕖", "苣", "诎", "蘧", "蠼", "朐", "鸲", "氍", "袪", "胠", "磲", "𫭟", "坥", "岨", "㭕", "𪨰", "䓛", "焌", "麹", "鼩", "灈", "竘"], "quan": ["全", "权", "拳", "圈", "泉", "劝", "犬", "诠", "券", "痊", "荃", "蜷", "铨", "颧", "绻", "鬈", "筌", "悛", "佺", "醛", "棬", "畎", "辁", "𨟠", "婘", "瑔", "鳈"], "que": ["却", "确", "缺", "雀", "鹊", "阙", "榷", "阕", "瘸", "炔", "悫", "碏", "埆", "𬒈"], "qun": ["群", "裙", "逡", "麇", "囷"], "ran": ["然", "染", "燃", "冉", "苒", "髯", "蚺", "䎃"], "rang": ["让", "嚷", "壤", "攘", "穰", "瓤", "禳", "瀼", "儴", "蘘"], "rao": ["绕", "扰", "饶", "娆", "荛", "桡"], "re": ["热", "惹"], "ren": ["人", "认", "任", "忍", "仁", "刃", "韧", "仞", "壬", "饪", "纫", "稔", "荏", "轫", "衽", "妊", "葚", "纴", "讱"], "reng": ["仍", "扔"], "ri": ["日", "驲"], "rong": ["容", "荣", "蓉", "融", "茸", "绒", "溶", "戎", "熔", "冗", "榕", "嵘", "镕", "蝾", "狨", "瑢"], "rou": ["肉", "柔", "揉", "蹂", "糅", "鞣", "𫐓"], "ru": ["如", "入", "儒", "辱", "汝", "乳", "茹", "孺", "蠕", "褥", "嚅", "濡", "缛", "襦", "溽", "洳", "蓐", "薷", "颥", "铷", "嬬"], "ruan": ["软", "阮", "堧", "媆", "瓀"], "rui": ["瑞", "锐", "蕊", "睿", "芮", "蕤", "枘", "蚋", "汭"], "run": ["润", "闰"], "ruo": ["若", "弱", "偌", "箬", "爇", "鄀", "婼", "蒻"], "sa": ["萨", "撒", "洒", "飒", "卅", "仨", "挲", "靸", "潵", "脎"], "sai": ["塞", "赛", "腮", "鳃", "噻"], "san": ["三", "散", "叁", "伞", "毵", "糁", "馓"], "sang": ["丧", "桑", "嗓", "搡", "颡", "磉"], "sao": ["扫", "骚", "嫂", "搔", "臊", "埽", "缫", "瘙", "溞"], "se": ["色", "塞", "瑟", "涩", "啬", "穑", "铯", "璱"], "sen": ["森"], "seng": ["僧"], "sha": ["杀", "沙", "傻", "莎", "刹", "煞", "霎", "纱", "啥", "厦", "砂", "杉", "鲨", "裟", "嗄", "铩", "歃", "痧", "唼"], "shai": ["色", "晒", "筛"], "shan": ["山", "单", "善", "闪", "衫", "禅", "珊", "扇", "删", "擅", "陕", "姗", "讪", "杉", "栅", "煽", "膳", "跚", "赡", "嬗", "膻", "潸", "缮", "汕", "苫", "剡", "舢", "鳝", "芟", "鄯", "蟮", "疝", "埏", "骟", "钐", "烻", "晱", "𫮃", "墡", "嶦"], "shang": ["上", "伤", "商", "尚", "赏", "晌", "裳", "觞", "熵", "殇", "墒", "绱", "垧"], "shao": ["少", "绍", "烧", "稍", "召", "哨", "邵", "梢", "鞘", "勺", "韶", "捎", "芍", "劭", "苕", "艄", "筲", "蛸", "潲", "睄", "玿", "柖"], "she": ["社", "设", "折", "舍", "射", "涉", "蛇", "拾", "舌", "摄", "奢", "赦", "慑", "麝", "赊", "佘", "歙", "畲", "厍", "猞", "阇", "𪨶", "滠"], "shei": ["谁"], "shen": ["身", "什", "神", "深", "甚", "参", "伸", "审", "沈", "申", "慎", "渗", "呻", "绅", "婶", "肾", "莘", "哂", "蜃", "娠", "葚", "诜", "矧", "砷", "糁", "谂", "瘆", "胂", "椹", "燊", "甡", "侁", "屾", "珅", "𬳽", "棽", "鲹", "𬬹", "瞫"], "sheng": ["生", "声", "胜", "圣", "盛", "省", "升", "剩", "绳", "牲", "笙", "甥", "昇", "嵊", "眚", "陞"], "shi": ["是", "时", "事", "十", "实", "什", "世", "使", "史", "诗", "师", "识", "似", "士", "式", "始", "失", "视", "石", "市", "势", "示", "室", "试", "释", "适", "食", "氏", "施", "尸", "侍", "饰", "拾", "逝", "湿", "殖", "誓", "驶", "匙", "狮", "蚀", "仕", "嘘", "矢", "屎", "嗜", "噬", "拭", "恃", "轼", "峙", "柿", "谥", "虱", "弑", "舐", "筮", "豕", "螫", "蓍", "奭", "莳", "湜", "鲥", "贳", "埘", "鸤", "酾", "炻", "铈", "邿", "䴓", "浉", "𫚕", "鲺", "祏", "鼫", "䏡", "栻", "𬤊", "媞", "襫"], "shou": ["手", "受", "首", "收", "守", "熟", "授", "兽", "寿", "瘦", "售", "狩", "绶", "艏"], "shu": ["书", "术", "数", "述", "树", "属", "熟", "束", "叔", "殊", "舒", "输", "疏", "抒", "鼠", "署", "竖", "梳", "恕", "蜀", "淑", "暑", "赎", "庶", "漱", "倏", "墅", "枢", "孰", "蔬", "曙", "薯", "纾", "塾", "戍", "黍", "姝", "澍", "殳", "菽", "秫", "摅", "沭", "毹", "腧", "陎", "鄃", "婌", "𬬸", "隃"], "shua": ["刷", "耍", "唰"], "shuai": ["率", "帅", "衰", "摔", "甩", "蟀"], "shuan": ["拴", "闩", "栓", "涮", "腨"], "shuang": ["双", "爽", "霜", "孀", "泷", "鹴", "漴", "骦", "礵"], "shui": ["说", "水", "谁", "睡", "税", "帨"], "shun": ["顺", "瞬", "舜", "吮", "楯"], "shuo": ["说", "数", "朔", "烁", "硕", "铄", "搠", "妁", "槊", "蒴"], "si": ["思", "四", "死", "斯", "似", "司", "丝", "私", "寺", "撕", "肆", "嘶", "厮", "嗣", "祀", "伺", "巳", "俟", "姒", "咝", "饲", "泗", "驷", "汜", "笥", "耜", "兕", "鸶", "澌", "蛳", "锶", "涘", "缌", "㟃", "虒", "楒", "飔", "凘"], "song": ["送", "宋", "松", "颂", "耸", "诵", "嵩", "讼", "悚", "怂", "忪", "淞", "崧", "竦", "凇", "菘", "娀", "㧐"], "sou": ["搜", "艘", "嗽", "飕", "叟", "嗖", "擞", "薮", "馊", "溲", "嗾", "蒐", "锼", "瞍", "廋", "螋"], "su": ["苏", "诉", "素", "速", "俗", "宿", "肃", "缩", "塑", "溯", "稣", "簌", "酥", "粟", "愫", "夙", "谡", "窣", "僳", "蔌", "甦", "嗉", "觫", "涑", "鹔", "𫗧", "骕", "傃", "蹜"], "suan": ["算", "酸", "蒜", "狻"], "sui": ["虽", "随", "岁", "碎", "遂", "尿", "隋", "祟", "髓", "邃", "绥", "隧", "穗", "睢", "燧", "濉", "荽", "谇", "穟", "璲", "眭", "𫟦", "𬭼", "襚", "旞"], "sun": ["孙", "损", "笋", "荪", "隼", "狲", "榫", "飧"], "suo": ["所", "索", "缩", "莎", "锁", "梭", "琐", "嗦", "唆", "娑", "挲", "蓑", "唢", "睃", "嗍", "桫", "羧", "葰", "溹"], "ta": ["他", "她", "它", "塔", "踏", "拓", "塌", "榻", "沓", "蹋", "挞", "遢", "獭", "趿", "鳎", "闼", "鞳", "溻", "铊", "褟", "阘", "鿎"], "tai": ["太", "态", "台", "泰", "抬", "胎", "苔", "汰", "跆", "骀", "肽", "邰", "薹", "钛", "炱", "酞", "鲐"], "tan": ["谈", "探", "叹", "弹", "坦", "坛", "贪", "摊", "谭", "滩", "潭", "毯", "炭", "瘫", "碳", "檀", "痰", "袒", "澹", "忐", "坍", "昙", "覃", "郯", "倓", "锬", "惔", "镡", "菼", "钽", "榃", "磹", "璮"], "tang": ["堂", "唐", "汤", "倘", "躺", "糖", "趟", "塘", "烫", "膛", "淌", "棠", "螳", "搪", "傥", "镗", "帑", "瑭", "樘", "螗", "溏", "羰", "镋", "蹚", "嘡", "耥", "铴", "鄌", "䣘", "埫"], "tao": ["讨", "逃", "套", "桃", "陶", "涛", "掏", "滔", "萄", "叨", "淘", "韬", "饕", "啕", "焘", "绦", "洮", "弢", "慆", "鼗", "梼", "绹", "𫘦"], "te": ["特", "忑", "慝", "铽"], "teng": ["腾", "疼", "藤", "滕", "誊", "縢", "螣", "熥", "䲢"], "ti": ["体", "题", "提", "替", "踢", "梯", "啼", "蹄", "涕", "惕", "剔", "屉", "剃", "嚏", "悌", "倜", "荑", "醍", "逖", "缇", "鹈", "裼", "锑", "绨", "趯", "鳀", "䏲", "䴘", "擿", "遆", "𫘨", "瑅"], "tian": ["天", "田", "添", "甜", "填", "舔", "恬", "腆", "阗", "忝", "殄", "畋", "湉", "瑱", "盷", "掭", "黇", "沺", "淟", "晪"], "tiao": ["条", "调", "跳", "挑", "眺", "迢", "窕", "佻", "朓", "笤", "祧", "蜩", "髫", "粜", "龆", "鲦", "嬥"], "tie": ["铁", "贴", "帖", "餮", "萜"], "ting": ["听", "停", "庭", "厅", "挺", "廷", "亭", "婷", "艇", "汀", "霆", "蜓", "铤", "梃", "桯", "颋", "莛", "渟", "珽", "烃", "葶", "𬘩", "䗴", "圢", "侹", "烶"], "tong": ["同", "通", "统", "痛", "洞", "童", "铜", "筒", "桐", "桶", "瞳", "捅", "彤", "恸", "僮", "峒", "佟", "潼", "酮", "仝", "嗵", "橦", "曈", "茼", "垌", "砼", "峂", "𫍣", "哃", "烔", "鲖", "穜", "𦒍", "㛚"], "tou": ["头", "投", "透", "偷", "骰"], "tu": ["突", "图", "土", "徒", "途", "吐", "涂", "兔", "屠", "秃", "凸", "荼", "菟", "酴", "钍", "堍", "稌", "葖", "㻬", "𬳿", "梌", "腯"], "tuan": ["团", "湍", "抟", "彖", "疃", "猯", "煓"], "tui": ["推", "退", "腿", "颓", "褪", "蜕", "忒", "煺", "魋", "𬯎"], "tun": ["吞", "褪", "臀", "屯", "饨", "豚", "囤", "暾", "焞", "鲀", "坉", "忳"], "tuo": ["脱", "托", "拖", "妥", "陀", "拓", "驼", "唾", "驮", "沱", "坨", "佗", "跎", "椭", "鸵", "橐", "砣", "鼍", "酡", "柝", "侂", "箨", "柁", "庹", "萚", "铊", "圫", "𬶍"], "wa": ["瓦", "娃", "挖", "哇", "袜", "蛙", "洼", "娲", "佤", "坬", "畖", "窊", "腽"], "wai": ["外", "歪", "崴"], "wan": ["完", "万", "晚", "玩", "湾", "碗", "弯", "腕", "挽", "顽", "婉", "宛", "丸", "蔓", "惋", "纨", "莞", "菀", "蜿", "皖", "绾", "剜", "畹", "豌", "烷", "琬", "芄", "脘", "椀", "塆", "婠", "𬇕"], "wang": ["王", "望", "往", "忘", "亡", "网", "汪", "妄", "枉", "旺", "惘", "罔", "辋", "魍", "尢", "尪"], "wei": ["为", "位", "未", "微", "味", "维", "威", "谓", "围", "卫", "韦", "唯", "伟", "危", "委", "尾", "魏", "慰", "喂", "违", "伪", "惟", "畏", "薇", "胃", "尉", "炜", "蔚", "萎", "娓", "巍", "渭", "帷", "纬", "苇", "偎", "猥", "猬", "桅", "玮", "诿", "帏", "韪", "痿", "闱", "煨", "嵬", "隗", "逶", "潍", "葳", "圩", "隈", "洧", "鲔", "亹", "沩", "涠", "艉", "煟", "霨", "溦", "鳂", "𣲗", "峗", "洈", "琟", "𬶏", "𫇭", "𬀩", "𬱟", "廆", "薳", "硙", "碨", "螱", "鳚"], "wen": ["文", "问", "闻", "温", "稳", "吻", "纹", "蚊", "雯", "瘟", "紊", "汶", "刎", "玟", "璺", "阌", "芠", "榅", "辒", "蕰", "鳁", "𫘜", "炆"], "weng": ["翁", "嗡", "瓮", "蓊", "蕹", "滃", "𬭩", "鹟"], "wo": ["我", "握", "卧", "窝", "沃", "喔", "涡", "倭", "龌", "渥", "蜗", "斡", "幄", "挝", "偓", "莴", "肟", "硪", "踒"], "wu": ["无", "物", "五", "武", "恶", "务", "屋", "误", "吴", "舞", "午", "伍", "悟", "乌", "雾", "吾", "污", "呜", "巫", "兀", "侮", "勿", "诬", "捂", "芜", "唔", "梧", "毋", "戊", "晤", "坞", "妩", "鹉", "蜈", "婺", "忤", "骛", "鹜", "牾", "寤", "邬", "庑", "仵", "杌", "怃", "焐", "鋈", "迕", "鼯", "芴", "钨", "痦", "圬", "浯", "鹀", "旿", "屼", "铻", "靰", "洿", "郚", "峿", "珸", "𣲘", "珷"], "xi": ["西", "系", "喜", "息", "希", "细", "习", "戏", "吸", "析", "惜", "洗", "席", "袭", "悉", "夕", "兮", "稀", "嘻", "熙", "昔", "溪", "牺", "晰", "膝", "锡", "媳", "隙", "熄", "茜", "嬉", "犀", "熹", "羲", "奚", "蹊", "禧", "玺", "徙", "蟋", "蜥", "皙", "樨", "淅", "唏", "曦", "檄", "僖", "螅", "翕", "汐", "屣", "隰", "觋", "晞", "郤", "铣", "阋", "醯", "烯", "谿", "舄", "葸", "禊", "窸", "郗", "饩", "裼", "豨", "釐", "浠", "蓰", "硒", "穸", "舾", "鼷", "粞", "菥", "绤", "睎", "傒", "嶲", "咥", "恓", "枲", "憙", "屃", "潟", "肸", "俙", "饻", "暿", "熻", "巇", "酅", "爔", "觿", "𠅤", "𫘬", "嶍", "鳛", "𬭳", "𬶮"], "xia": ["下", "夏", "吓", "侠", "瞎", "霞", "狭", "暇", "峡", "厦", "虾", "辖", "匣", "遐", "瑕", "黠", "狎", "呷", "罅", "硖", "柙", "叚", "翈"], "xian": ["现", "见", "先", "显", "线", "限", "险", "鲜", "献", "仙", "洗", "闲", "县", "陷", "贤", "嫌", "宪", "弦", "纤", "羡", "掀", "咸", "衔", "暹", "娴", "涎", "舷", "馅", "腺", "藓", "岘", "酰", "燹", "冼", "痫", "跹", "锨", "霰", "跣", "籼", "鹇", "猃", "苋", "蚬", "忺", "祆", "筅", "禒", "氙", "挦", "莶", "𬸣", "孅", "伭", "𫍯", "狝", "崄", "㬎", "𬀪", "𪾢", "缐"], "xiang": ["想", "相", "向", "象", "像", "响", "香", "乡", "项", "降", "享", "详", "箱", "湘", "祥", "襄", "巷", "翔", "厢", "镶", "橡", "饷", "骧", "飨", "缃", "庠", "芗", "鲞", "珦", "葙", "𬙋", "瓖"], "xiao": ["小", "笑", "消", "校", "效", "晓", "萧", "销", "孝", "削", "肖", "啸", "潇", "逍", "筱", "宵", "嚣", "箫", "霄", "哮", "淆", "硝", "枭", "骁", "绡", "崤", "哓", "枵", "魈", "鸮", "蛸", "翛", "虓", "猇", "蟏", "洨", "𫍲", "皛", "涍", "敩", "滧"], "xie": ["些", "写", "解", "血", "谢", "叶", "邪", "协", "斜", "鞋", "歇", "泄", "胁", "谐", "携", "械", "屑", "挟", "卸", "蝎", "泻", "懈", "亵", "燮", "蟹", "颉", "偕", "邂", "勰", "楔", "榭", "撷", "瀣", "廨", "绁", "薤", "獬", "缬", "渫", "絜", "躞", "榍", "澥", "揳", "㙦", "偰", "𬹼", "薢", "𤫉"], "xin": ["心", "新", "信", "辛", "欣", "薪", "馨", "衅", "芯", "昕", "莘", "鑫", "歆", "锌", "忻", "囟", "炘", "伈", "䜣", "𫷷"], "xing": ["行", "性", "形", "兴", "星", "幸", "醒", "姓", "型", "省", "刑", "腥", "杏", "猩", "惺", "邢", "悻", "擤", "荥", "饧", "荇", "硎", "陉", "骍", "钘", "铏", "瑆", "煋", "𫰛", "婞"], "xiong": ["兄", "雄", "胸", "凶", "熊", "匈", "汹", "芎", "讻", "夐", "诇"], "xiu": ["修", "秀", "休", "宿", "袖", "臭", "羞", "绣", "朽", "嗅", "锈", "咻", "岫", "馐", "髹", "貅", "庥", "鸺", "琇", "脩", "溴", "滫", "䗛", "珛"], "xu": ["许", "需", "须", "续", "虚", "序", "徐", "叙", "绪", "蓄", "吁", "旭", "絮", "畜", "胥", "嘘", "婿", "戌", "墟", "浒", "恤", "栩", "煦", "诩", "酗", "顼", "勖", "圩", "蓿", "溆", "盱", "湑", "洫", "糈", "醑", "魆", "珝", "旴", "谞", "冔", "欻", "媭", "𬣙", "𦈡", "昫", "㳚", "垿"], "xuan": ["选", "宣", "玄", "旋", "悬", "轩", "喧", "萱", "眩", "券", "渲", "炫", "漩", "绚", "璇", "暄", "铉", "烜", "谖", "煊", "癣", "泫", "嬛", "楦", "儇", "衒", "咺", "瑄", "痃", "昡", "𫓶", "愃", "禤", "𫍽", "翾", "𫠊", "玹", "暶", "晅", "琄", "碹"], "xue": ["学", "血", "雪", "穴", "薛", "削", "靴", "谑", "噱", "鳕", "踅", "茓", "峃"], "xun": ["寻", "迅", "训", "讯", "逊", "循", "询", "巡", "勋", "熏", "薰", "殉", "荀", "旬", "驯", "醺", "浚", "洵", "峋", "恂", "巽", "浔", "徇", "埙", "汛", "郇", "荨", "曛", "蕈", "獯", "鲟", "珣", "噀", "栒", "𫄸", "𬘓", "𬩽", "𬍤", "𬊈"], "ya": ["亚", "压", "呀", "雅", "牙", "丫", "讶", "涯", "崖", "哑", "鸦", "押", "鸭", "芽", "衙", "娅", "轧", "桠", "琊", "睚", "蚜", "伢", "垭", "迓", "砑", "猰", "揠", "氩", "岈", "玡", "堐"], "yan": ["眼", "言", "研", "严", "演", "验", "烟", "颜", "燕", "延", "厌", "掩", "沿", "岩", "艳", "殷", "炎", "雁", "焰", "咽", "宴", "焉", "嫣", "衍", "盐", "淹", "阎", "彦", "砚", "铅", "檐", "晏", "俨", "奄", "筵", "偃", "谚", "湮", "胭", "魇", "阉", "蜒", "腌", "妍", "堰", "焱", "鼹", "滟", "恹", "赝", "琰", "鄢", "唁", "餍", "阏", "兖", "酽", "谳", "郾", "罨", "黡", "闫", "厣", "芫", "崦", "弇", "渰", "甗", "嬿", "掞", "墕", "漹", "𫄧", "虤", "沇", "䶮", "棪", "扊", "𬸘", "𬙂", "蝘", "戭", "𪩘", "觃"], "yang": ["样", "杨", "阳", "养", "扬", "洋", "仰", "羊", "央", "痒", "鸯", "氧", "漾", "恙", "鞅", "殃", "佯", "炀", "秧", "泱", "怏", "徉", "飏", "烊", "疡", "蛘", "旸", "钖", "玚", "垟", "咉", "羕"], "yao": ["要", "约", "摇", "药", "腰", "咬", "遥", "妖", "姚", "耀", "邀", "谣", "钥", "尧", "瑶", "夭", "侥", "吆", "肴", "幺", "窑", "曜", "杳", "爻", "舀", "窈", "疟", "徭", "鹞", "轺", "崾", "珧", "峣", "窅", "铫", "鳐", "猺", "靿", "㙘", "垚", "媱"], "ye": ["也", "业", "夜", "爷", "野", "叶", "页", "耶", "咽", "液", "冶", "曳", "谒", "噎", "烨", "腋", "邺", "椰", "掖", "揶", "靥", "晔", "馌", "倻", "铘"], "yi": ["一", "以", "意", "已", "义", "艺", "衣", "易", "译", "异", "疑", "依", "议", "医", "亦", "益", "遗", "忆", "艾", "移", "伊", "仪", "尾", "宜", "翼", "椅", "矣", "抑", "夷", "姨", "毅", "役", "逸", "倚", "亿", "溢", "谊", "乙", "奕", "咦", "裔", "疫", "怡", "蚁", "颐", "绎", "揖", "彝", "臆", "邑", "驿", "诣", "佚", "贻", "懿", "轶", "翳", "屹", "漪", "弈", "蜴", "熠", "翌", "呓", "羿", "咿", "胰", "噫", "沂", "圯", "迤", "弋", "缢", "壹", "旖", "饴", "痍", "悒", "肄", "猗", "翊", "诒", "挹", "荑", "刈", "苡", "佾", "镒", "嶷", "峄", "薏", "怿", "浥", "埸", "瘗", "铱", "癔", "黟", "舣", "祎", "眙", "嗌", "劓", "裛", "殪", "鹢", "繄", "钇", "乂", "椸", "佁", "踦", "杙", "勚", "镱", "洢", "宧", "酏", "扆", "匜", "螠", "扅", "簃", "𫖮", "𬺈", "枍", "𬬩", "㑊", "廙", "潩", "嫕", "鹝", "燚", "𫄷", "𬟁"], "yin": ["因", "音", "引", "印", "隐", "银", "阴", "吟", "饮", "殷", "姻", "淫", "尹", "寅", "茵", "荫", "瘾", "胤", "垠", "蚓", "氤", "喑", "龈", "夤", "洇", "狺", "堙", "鄞", "霪", "愔", "窨", "禋", "吲", "龂", "茚", "慭", "骃", "铟", "訚", "𬘡", "𬤇", "𬮱", "歅", "溵", "珢", "硍", "崟", "蟫", "嚚", "䲟"], "ying": ["应", "影", "英", "营", "映", "硬", "迎", "盈", "赢", "樱", "婴", "鹰", "莹", "颖", "莺", "蝇", "萤", "瑛", "嬴", "萦", "瀛", "膺", "滢", "鹦", "缨", "潆", "荧", "颍", "郢", "嘤", "罂", "楹", "撄", "荥", "茔", "璎", "媵", "瘿", "锳", "蓥", "䓨", "媖", "溁"], "yo": ["哟", "唷"], "yong": ["用", "永", "勇", "拥", "庸", "涌", "咏", "泳", "佣", "雍", "甬", "俑", "慵", "恿", "臃", "踊", "邕", "镛", "蛹", "喁", "壅", "墉", "痈", "饔", "颙", "鄘", "鳙", "澭", "栐", "埇", "鲬", "㶲"], "you": ["有", "又", "由", "友", "游", "右", "尤", "优", "犹", "幽", "油", "忧", "幼", "悠", "诱", "邮", "佑", "黝", "柚", "囿", "攸", "酉", "呦", "铀", "祐", "宥", "牖", "猷", "鱿", "莠", "繇", "蝣", "鼬", "疣", "侑", "釉", "蚴", "麀", "卣", "莸", "羑", "莜", "槱", "蝤", "耰", "浟", "蚰", "铕", "𬨎", "鲉"], "yu": ["于", "与", "语", "余", "玉", "雨", "遇", "欲", "育", "预", "域", "鱼", "愈", "誉", "予", "宇", "狱", "羽", "郁", "於", "御", "喻", "豫", "愚", "寓", "愉", "渔", "浴", "俞", "吁", "尉", "裕", "禹", "娱", "虞", "钰", "舆", "逾", "煜", "蔚", "谕", "迂", "瑜", "驭", "隅", "榆", "毓", "屿", "渝", "欤", "禺", "臾", "淤", "芋", "谀", "揄", "妪", "腴", "盂", "庾", "觎", "熨", "瘀", "鬻", "峪", "聿", "圄", "昱", "龉", "纡", "喁", "妤", "竽", "圉", "饫", "蜮", "萸", "伛", "阈", "窳", "鹬", "鹆", "燠", "瘐", "雩", "俣", "遹", "舁", "蝓", "窬", "棫", "嵛", "蓣", "彧", "滪", "玙", "狳", "畬", "敔", "瑀", "嵎", "堉", "潏", "邘", "艅", "褕", "髃", "鄅", "㺄", "悆", "淯", "矞", "燏"], "yuan": ["原", "远", "元", "员", "院", "愿", "源", "园", "圆", "缘", "袁", "怨", "渊", "援", "冤", "猿", "鸳", "苑", "沅", "垣", "媛", "辕", "爰", "鸢", "圜", "瑗", "湲", "鼋", "掾", "芫", "垸", "嫄", "塬", "螈", "涴", "橼", "眢", "蜎", "箢", "妧", "𫘪", "羱"], "yue": ["月", "越", "乐", "约", "跃", "曰", "岳", "阅", "悦", "钥", "粤", "钺", "樾", "栎", "刖", "哕", "龠", "瀹", "籥", "玥", "彟", "𫐄", "𬸚", "爚"], "yun": ["云", "运", "员", "晕", "允", "韵", "蕴", "孕", "芸", "筠", "匀", "纭", "酝", "耘", "陨", "氲", "熨", "愠", "殒", "昀", "恽", "郓", "韫", "郧", "狁", "赟", "鋆", "缊", "筼", "煴", "涢", "沄", "𫖳", "馧", "妘"], "za": ["杂", "扎", "砸", "咋", "咂", "匝", "拶", "臜"], "zai": ["在", "再", "载", "仔", "灾", "宰", "哉", "栽", "崽", "甾"], "zan": ["咱", "赞", "暂", "攒", "簪", "瓒", "錾", "拶", "趱", "糌", "昝", "酂", "寁"], "zang": ["藏", "脏", "葬", "赃", "臧", "奘", "驵", "牂"], "zao": ["早", "造", "遭", "糟", "躁", "澡", "凿", "燥", "噪", "藻", "灶", "枣", "皂", "蚤", "唣", "慥", "璪", "簉", "𥖨"], "ze": ["则", "责", "择", "泽", "咋", "啧", "仄", "赜", "迮", "昃", "帻", "舴", "箦", "笮"], "zei": ["贼", "鲗"], "zen": ["怎", "谮"], "zeng": ["曾", "增", "综", "赠", "憎", "锃", "甑", "缯", "矰", "罾", "鄫", "䎖"], "zha": ["查", "扎", "炸", "眨", "札", "诈", "乍", "咋", "渣", "栅", "喳", "喋", "轧", "闸", "榨", "吒", "咤", "蚱", "铡", "柞", "楂", "揸", "砟", "馇", "劄", "奓", "霅", "哳", "拃", "挓", "齇", "鲊", "鲝", "痄", "溠", "䃎"], "zhai": ["择", "祭", "摘", "斋", "宅", "债", "窄", "寨", "翟", "豸", "瘵"], "zhan": ["战", "展", "站", "占", "斩", "沾", "绽", "詹", "粘", "瞻", "盏", "湛", "崭", "辗", "栈", "毡", "蘸", "旃", "谵", "鳣", "飐", "搌", "栴", "𫗴", "鹯", "偡"], "zhang": ["长", "张", "章", "掌", "丈", "帐", "仗", "障", "杖", "胀", "涨", "账", "璋", "彰", "瘴", "樟", "漳", "蟑", "嶂", "獐", "幛", "鄣", "嫜", "仉", "暲"], "zhao": ["着", "找", "照", "朝", "招", "赵", "昭", "召", "罩", "兆", "爪", "诏", "沼", "钊", "肇", "棹", "啁", "笊", "旐", "曌", "𬬿", "𬶐"], "zhe": ["这", "着", "者", "哲", "折", "遮", "浙", "辙", "辄", "蛰", "谪", "褶", "鹧", "蔗", "赭", "蜇", "柘", "磔", "锗", "晢", "詟", "喆", "啫", "䗪"], "zhen": ["真", "阵", "震", "镇", "珍", "针", "振", "枕", "贞", "侦", "桢", "诊", "朕", "祯", "斟", "帧", "圳", "甄", "臻", "箴", "缜", "稹", "榛", "砧", "轸", "疹", "赈", "鸩", "畛", "禛", "蓁", "胗", "鬒", "浈", "葴", "瑧", "昣", "袗", "纼", "揕"], "zheng": ["正", "政", "整", "争", "证", "征", "郑", "睁", "挣", "怔", "症", "蒸", "铮", "拯", "筝", "狰", "峥", "诤", "烝", "钲"], "zhi": ["之", "只", "知", "至", "直", "识", "制", "指", "治", "志", "质", "值", "致", "止", "支", "智", "纸", "置", "氏", "职", "织", "执", "枝", "旨", "植", "殖", "掷", "秩", "芝", "址", "脂", "侄", "滞", "稚", "肢", "芷", "挚", "汁", "吱", "帜", "窒", "蜘", "炙", "峙", "趾", "徵", "咫", "帙", "雉", "痣", "桎", "贽", "祗", "蛭", "祉", "陟", "摭", "栉", "栀", "痔", "骘", "枳", "鸷", "踯", "卮", "豸", "跖", "轾", "觯", "郅", "彘", "踬", "胝", "絷", "埴", "忮", "黹", "畤", "酯", "轵", "沚", "铚", "锧", "稙", "庤", "跱", "疐", "𦭜", "泜", "禔", "榰", "扺", "晊", "梽", "𬃊", "滍"], "zhong": ["中", "种", "重", "众", "终", "钟", "仲", "忠", "衷", "肿", "锺", "踵", "冢", "盅", "螽", "舯", "茽", "柊"], "zhou": ["周", "州", "洲", "宙", "皱", "舟", "咒", "骤", "轴", "粥", "肘", "昼", "纣", "帚", "胄", "诌", "绉", "籀", "妯", "啁", "辀", "赒", "碡", "婤", "酎", "㤘", "荮", "鸼", "㑇"], "zhu": ["主", "住", "术", "著", "注", "助", "诸", "朱", "逐", "竹", "珠", "筑", "猪", "祝", "烛", "柱", "驻", "煮", "嘱", "铸", "株", "蛛", "诛", "瞩", "竺", "伫", "贮", "拄", "侏", "渚", "蛀", "箸", "杼", "铢", "炷", "麈", "茱", "躅", "洙", "橥", "苎", "邾", "翥", "舳", "潴", "柷", "槠", "纻", "疰", "瘃", "蠋", "𬣞", "砫"], "zhua": ["抓", "爪", "髽"], "zhuai": ["拽"], "zhuan": ["传", "转", "专", "撰", "赚", "砖", "沌", "篆", "馔", "啭", "颛", "瑑", "䏝", "僎"], "zhuang": ["装", "状", "庄", "撞", "壮", "妆", "桩", "幢", "奘", "戆"], "zhui": ["追", "坠", "缀", "锥", "赘", "惴", "椎", "骓", "缒", "隹"], "zhun": ["准", "谆", "肫", "窀", "衠", "𬘯"], "zhuo": ["着", "著", "桌", "卓", "捉", "拙", "灼", "琢", "浊", "酌", "啄", "镯", "斫", "濯", "茁", "擢", "涿", "倬", "浞", "诼", "椓", "棁", "䦃", "汋", "叕", "䓬", "晫", "禚", "𬸦"], "zi": ["子", "自", "字", "资", "紫", "姊", "滋", "姿", "仔", "兹", "梓", "吱", "孜", "咨", "恣", "渍", "淄", "龇", "滓", "籽", "孳", "缁", "髭", "茈", "眦", "锱", "訾", "辎", "赀", "秭", "笫", "觜", "嗞", "趑", "镃", "嵫", "粢", "耔", "孖", "鼒", "鲻", "鄑", "虸"], "zong": ["总", "宗", "纵", "踪", "综", "棕", "粽", "鬃", "偬", "枞", "鬷", "倧", "疭", "腙"], "zou": ["走", "奏", "揍", "邹", "驺", "陬", "诹", "鄹", "鲰"], "zu": ["足", "族", "组", "祖", "阻", "租", "卒", "诅", "俎", "镞", "菹", "崒", "珇"], "zuan": ["钻", "纂", "攥", "缵", "躜"], "zui": ["最", "嘴", "罪", "醉", "咀", "蕞", "槜"], "zun": ["尊", "遵", "樽", "鳟", "撙", "噂", "嶟", "𨱔", "僔"], "zuo": ["作", "做", "坐", "左", "座", "昨", "佐", "琢", "撮", "祚", "酢", "柞", "嘬", "胙", "怍", "笮", "唑", "捽", "阼", "岞"]]

  //Isolation
  
  @Binding var input: String //TEXTFIELD
  @Binding var inputPinyin: String
  @Binding var pinyinLocation: Int
  @Binding var cursor: Int
  @State var seperatedPinyin: [String] = []
  @State var onFocusPinyinSyllable = ""
  @State var pinyinTab = 0
  var body: some View {
    if #available(watchOS 10.0, *) {
      HStack {
        if !onFocusPinyinSyllable.isEmpty {
          HStack {
            if pinyinTab > 0 {
              Button(action: {
                pinyinTab -= 1
              }, label: {
                Image(systemName: "chevron.compact.left")
                  .padding(.trailing, 5)
              })
            }
            Spacer()
            ForEach(pinyinTab*6..<pinyinTab*6+6, id: \.self) { character in
              Button(action: {
                for i in 0..<onFocusPinyinSyllable.count {
                  if i != 0 {
                    cursor -= 1
                  }
                  inputPinyin = backspace(textField: inputPinyin, cursor: 1)
                  input = backspace(textField: input, cursor: pinyinLocation)
                }
                input = CepheusKeyboardAddLetter((arraySafeAccess(CepheusPinyinDictionary[onFocusPinyinSyllable] ?? [onFocusPinyinSyllable], element: character) ?? invalidPinyinReturn(onFocusPinyinSyllable, character: character)) as! String, textField: input, cursor: pinyinLocation-1)
//                praint((arraySafeAccess(CepheusPinyinDictionary[onFocusPinyinSyllable] ?? [onFocusPinyinSyllable], element: character) ?? invalidPinyinReturn(onFocusPinyinSyllable, character: character)) as! String)
//                praint(CepheusKeyboardAddLetter((arraySafeAccess(CepheusPinyinDictionary[onFocusPinyinSyllable] ?? [onFocusPinyinSyllable], element: character) ?? invalidPinyinReturn(onFocusPinyinSyllable, character: character)) as! String, textField: input, cursor: pinyinLocation-1))
                pinyinLocation += ((arraySafeAccess(CepheusPinyinDictionary[onFocusPinyinSyllable] ?? [onFocusPinyinSyllable], element: character) ?? invalidPinyinReturn(onFocusPinyinSyllable, character: character)) as! String).count
                cursor += ((arraySafeAccess(CepheusPinyinDictionary[onFocusPinyinSyllable] ?? [onFocusPinyinSyllable], element: character) ?? invalidPinyinReturn(onFocusPinyinSyllable, character: character)) as! String).count - 1
              }, label: {
                Text((arraySafeAccess(CepheusPinyinDictionary[onFocusPinyinSyllable] ?? [onFocusPinyinSyllable], element: character) ?? invalidPinyinReturn(onFocusPinyinSyllable, character: character)) as! String)
                  .padding(.horizontal, 1)
              })
              .opacity((arraySafeAccess(CepheusPinyinDictionary[onFocusPinyinSyllable] ?? [onFocusPinyinSyllable], element: character) == nil) ? 0 : 1)
              .disabled(arraySafeAccess(CepheusPinyinDictionary[onFocusPinyinSyllable] ?? [onFocusPinyinSyllable], element: character) == nil)
            }
            Spacer()
            if pinyinTab < Int((CepheusPinyinDictionary[onFocusPinyinSyllable] ?? ["？"]).count/6) {
              Button(action: {
                pinyinTab += 1
              }, label: {
                Image(systemName: "chevron.compact.right")
                  .padding(.leading, 5)
              })
            }
          }
        } else {
          Text(String("等待拼音"))
            .foregroundStyle(.secondary)
          Spacer()
        }
      }
      .onChange(of: inputPinyin) {
        seperatedPinyin = groupedPinyin(input: inputPinyin)
        onFocusPinyinSyllable = (arraySafeAccess(seperatedPinyin, element: 0) ?? "") as! String
        //        print(inputPinyin)
      }
      .onChange(of: seperatedPinyin) {
        pinyinTab = 0
      }
    }
  }
  func backspace(textField: String, cursor: Int) -> String {
    var singleLetters: [Character] = []
    for letter in textField {
      singleLetters.append(letter)
    }
    if cursor-1 >= 0 {
      singleLetters.remove(at: cursor-1)
    }
    return singleLetters.map{String($0)}.joined()
  }
  func invalidPinyinReturn(_ input: String, character: Int) -> String {
    if CepheusPinyinDictionary[input] != nil {
      return "？"
    } else {
      if character == 0 {
        return input
      } else {
        return "？"
      }
    }
  }
}

func groupedPinyin(input: String) -> [String] {
  var letters: [String] = [] //The seperated letters, one by one
  var shouldLetterBeSkipped: [Bool] = [] //This determines if it will be count as a new syllable.
  var syllable = "" //A single syllable and will be added to the output when process finished.
  var output: [String] = [] //Final return variables
  letters = []
  shouldLetterBeSkipped = []
  for letter in input {
    letters.append(String(letter).lowercased())
  } //Breaks the pinyin into single letters.
  shouldLetterBeSkipped = Array(repeating: false, count: letters.count) //Initialize the array for skipping letters, length as same as the letter counts.
  for composerCursor in 0..<letters.count { //Check the syllables
    if !shouldLetterBeSkipped[composerCursor] { //The letter should be skipped if it's not the first letter in a syllable.
      syllable = "" //Initialize syllable for a new syllable
      switch letters[composerCursor] { //Check the first letter of syllable
      case "a":
        syllable = a_ability(letters, cursor: composerCursor)
      case "b":
        syllable = "b" + connectVowels(letters, cursor: composerCursor, allowments: ["a": true, "ai": true, "ang": true, "ao": true, "ei": true, "en": true, "eng": true, "i": true, "ian": true, "iao": true, "ie": true, "in": true, "ing": true, "o": true, "u": true])
      case "c":
        if (arraySafeAccess(letters, element: composerCursor+1) ?? "") as! String == "h" {
          syllable = "ch" + connectVowels(letters, cursor: composerCursor, allowments: ["a": true, "ai": true, "an": true, "ang": true, "ao": true, "e": true, "en": true, "eng": true, "i": true, "ong": true, "ou": true, "u": true, "ua": true, "uai": true, "uan": true, "uang": true, "ui": true, "un": true, "uo": true], isSyllableDoubleLetter: true)
        } else {
          syllable = "c" + connectVowels(letters, cursor: composerCursor, allowments: ["a": true, "ai": true, "an": true, "ang": true, "ao": true, "e": true, "en": true, "eng": true, "i": true, "ong": true, "ou": true, "u": true, "uan": true, "ui": true, "un": true, "uo": true])
        }
      case "d":
        syllable = "d" + connectVowels(letters, cursor: composerCursor, allowments: ["a": true, "ai": true, "an": true, "ang": true, "ao": true, "e": true, "ei": true, "en": true, "eng": true, "i": true, "ian": true, "iang": true, "iao": true, "ie": true, "ing": true, "iu": true, "ong": true, "ou": true, "u": true, "uan": true, "ui": true, "un": true, "uo": true])
      case "e":
        syllable = e_ability(letters, cursor: composerCursor, allow_eng: false)
      case "f":
        syllable = "f" + connectVowels(letters, cursor: composerCursor, allowments: ["a": true, "an": true, "ang": true, "ei": true, "en": true, "eng": true, "o": true, "ou": true, "u": true])
      case "g":
        syllable = "g" + connectVowels(letters, cursor: composerCursor, allowments: ["a": true, "ai": true, "an": true, "ang": true, "ao": true, "e": true, "ei": true, "en": true, "eng": true, "ong": true, "ou": true, "u": true, "ua": true, "uai": true, "uan": true, "uang": true, "uo": true])
      case "h":
        syllable = "h" + connectVowels(letters, cursor: composerCursor, allowments: ["a": true, "ai": true, "an": true, "ang": true, "ao": true, "e": true, "ei": true, "en": true, "eng": true, "ong": true, "ou": true, "u": true, "ua": true, "uai": true, "uan": true, "uang": true, "ui": true, "un": true, "uo": true])
      case "i":
        syllable = "i"
      case "j":
        syllable = "j" + connectVowels(letters, cursor: composerCursor, allowments: ["i": true, "ia": true, "ian": true, "iang": true, "iao": true, "ie": true, "in": true, "ing": true, "iong": true, "iu": true, "u": true, "uan": true, "ue": true, "un": true])
      case "k":
        syllable = "k" + connectVowels(letters, cursor: composerCursor, allowments: ["a": true, "ai": true, "an": true, "ang": true, "ao": true, "e": true, "ei": true, "en": true, "eng": true, "ong": true, "ou": true, "u": true, "ua": true, "uai": true, "uan": true, "uang": true, "ui": true, "un": true, "uo": true])
      case "l":
        syllable = "l" + connectVowels(letters, cursor: composerCursor, allowments: ["a": true, "ai": true, "an": true, "ang": true, "ao": true, "e": true, "ei": true, "eng": true, "i": true, "ia": true, "ian": true, "iang": true, "iao": true, "ie": true, "in": true, "ing": true, "iu": true, "o": true, "ong": true, "ou": true, "u": true, "uan": true, "un": true, "uo": true, "v": true, "ve": true])
      case "m":
        syllable = "m" + connectVowels(letters, cursor: composerCursor, allowments: ["a": true, "ai": true, "an": true, "ang": true, "ao": true, "e": true, "ei": true, "en": true, "eng": true, "i": true, "ian": true, "iao": true, "ie": true, "in": true, "ing": true, "iu": true, "o": true, "ou": true, "u": true])
      case "n":
        syllable = "n" + connectVowels(letters, cursor: composerCursor, allowments: ["a": true, "ai": true, "an": true, "ang": true, "ao": true, "e": true, "ei": true, "en": true, "eng": true, "i": true, "ia": true, "ian": true, "iang": true, "iao": true, "ie": true, "in": true, "ing": true, "iu": true, "ong": true, "ou": true, "u": true, "uan": true, "un": true, "uo": true, "v": true, "ve": true])
      case "o":
        syllable = o_ability(letters, cursor: composerCursor, allow_ong: false)
      case "p":
        syllable = "p" + connectVowels(letters, cursor: composerCursor, allowments: ["a": true, "ai": true, "an": true, "ang": true, "ao": true, "ei": true, "en": true, "eng": true, "i": true, "ian": true, "iao": true, "ie": true, "in": true, "ing": true, "o": true, "ou": true, "u": true])
      case "q":
        syllable = "q" + connectVowels(letters, cursor: composerCursor, allowments: ["i": true, "ia": true, "ian": true, "iang": true, "iao": true, "ie": true, "in": true, "ing": true, "iong": true, "iu": true, "u": true, "uan": true, "ue": true, "un": true])
      case "r":
        syllable = "r" + connectVowels(letters, cursor: composerCursor, allowments: ["an": true, "ang": true, "ao": true, "e": true, "en": true, "eng": true, "i": true, "ong": true, "ou": true, "u": true, "uan": true, "ui": true, "un": true, "uo": true])
      case "s":
        if (arraySafeAccess(letters, element: composerCursor+1) ?? "") as! String == "h" {
          syllable = "sh" + connectVowels(letters, cursor: composerCursor, allowments: ["a": true, "ai": true, "an": true, "ang": true, "ao": true, "e": true, "ei": true, "en": true, "eng": true, "i": true, "ong": true, "ou": true, "u": true, "ua": true, "uai": true, "uan": true, "uang": true, "ui": true, "un": true, "uo": true], isSyllableDoubleLetter: true)
        } else {
          syllable = "s" + connectVowels(letters, cursor: composerCursor, allowments: ["a": true, "ai": true, "an": true, "ang": true, "ao": true, "e": true, "ei": true, "en": true, "eng": true, "i": true, "ong": true, "ou": true, "u": true, "uan": true, "ui": true, "un": true, "uo": true])
        }
      case "t":
        syllable = "t" + connectVowels(letters, cursor: composerCursor, allowments: ["a": true, "ai": true, "an": true, "ang": true, "ao": true, "e": true, "ei": true, "eng": true, "i": true, "ian": true, "iao": true, "ie": true, "ing": true, "ong": true, "ou": true, "u": true, "uan": true, "ui": true, "un": true, "uo": true])
      case "u":
        syllable = "u"
      case "v":
        syllable = "v"
      case "w":
        syllable = "w" + connectVowels(letters, cursor: composerCursor, allowments: ["a": true, "ai": true, "an": true, "ang": true, "ei": true, "en": true, "eng": true, "o": true, "u": true])
      case "x":
        syllable = "x" + connectVowels(letters, cursor: composerCursor, allowments: ["i": true, "ia": true, "ian": true, "iang": true, "iao": true, "ie": true, "in": true, "ing": true, "iong": true, "iu": true, "u": true, "uan": true, "ue": true, "un": true])
      case "y":
        syllable = "y" + connectVowels(letters, cursor: composerCursor, allowments: ["a": true, "an": true, "ang": true, "ao": true, "e": true, "i": true, "in": true, "ing": true, "ong": true, "ou": true, "u": true, "uan": true, "ue": true, "un": true])
      case "z":
        if (arraySafeAccess(letters, element: composerCursor+1) ?? "") as! String == "h" {
          syllable = "zh" + connectVowels(letters, cursor: composerCursor, allowments: ["a": true, "ai": true, "an": true, "ang": true, "ao": true, "e": true, "ei": true, "en": true, "eng": true, "i": true, "ong": true, "ou": true, "u": true, "ua": true, "uai": true, "uan": true, "uang": true, "ui": true, "un": true, "uo": true], isSyllableDoubleLetter: true)
        } else {
          syllable = "z" + connectVowels(letters, cursor: composerCursor, allowments: ["a": true, "ai": true, "an": true, "ang": true, "ao": true, "e": true, "ei": true, "en": true, "eng": true, "i": true, "ong": true, "ou": true, "u": true, "uan": true, "ui": true, "un": true, "uo": true])
        }
      default:
        syllable = letters[composerCursor] //Letters out of A-Z or "zh""ch""sh" will be directlly set for a syllable.
      }
      for skippedLetter in 0..<syllable.count {
        shouldLetterBeSkipped[composerCursor+skippedLetter] = true
      }
      if syllable != "'" && syllable != "’" && syllable != "‘" && syllable != " " {
        output.append(syllable)
        //        print(syllable)
      }
    }
  }
  return output
}

func arraySafeAccess(_ array: Array<Any>, element: Int) -> Any? {
  //This function avoids index out of range error when accessing a range.
  //If out, then it will return nil instead of throwing an error.
  //Normally it will just return the content, but in optional.
  if element >= array.count || element < 0 { //Index out of range
    return nil
  } else { //Index in range
    //    print(array)
    //    print(element)
    return array[element]
  }
}

func connectVowels(_ array: Array<Any>, cursor: Int, allowments: [String: Bool], isSyllableDoubleLetter: Bool = false) -> String {
  //This function returns the correct vowel part for a consonant.
  //Cursor should be on the consonant letter.
  //The allowment is a dictionary that tells what vowels are acceptable.
  //If a vowel didn't been marked, it's default value will be false.
  var vowelCursor = 0 //This indicates where the vowels starts, the int means how many letters it should move from consonants to vowels.
  if isSyllableDoubleLetter {
    vowelCursor = cursor+2 //For "zh""ch""sh", their vowels start 2 letters after the first letter.
  } else {
    vowelCursor = cursor+1 //For other single letter consonants, their vowels should only move 1.
  }
  let firstLetter: String = arraySafeAccess(array, element: vowelCursor) as? String ?? "" //The letter after the cursor (a consonant letter)
  switch firstLetter {
  case "a":
    return a_ability(array, cursor: vowelCursor, allow_ai: allowments["ai"] ?? false, allow_ao: allowments["ao"] ?? false, allow_an: allowments["an"] ?? false, allow_ang: allowments["ang"] ?? false)
  case "e":
    return e_ability(array, cursor: vowelCursor, allow_ei: allowments["ei"] ?? false, allow_er: allowments["er"] ?? false, allow_en: allowments["en"] ?? false, allow_eng: allowments["eng"] ?? false)
  case "i":
    return i_ability(array, cursor: vowelCursor,allow_ia: allowments["ia"] ?? false, allow_iao: allowments["iao"] ?? false, allow_ian: allowments["ian"] ?? false, allow_iang: allowments["iang"] ?? false, allow_ie: allowments["ie"] ?? false, allow_iong: allowments["iong"] ?? false, allow_iu: allowments["iu"] ?? false, allow_in: allowments["in"] ?? false, allow_ing: allowments["ing"] ?? false)
  case "o":
    return o_ability(array, cursor: vowelCursor, allow_ou: allowments["ou"] ?? false, allow_ong: allowments["ong"] ?? false)
  case "u":
    return u_ability(array, cursor: vowelCursor, allow_ua: allowments["ua"] ?? false, allow_uai: allowments["uai"] ?? false, allow_uan: allowments["uan"] ?? false, allow_uang: allowments["uang"] ?? false, allow_ue: allowments["ue"] ?? false, allow_ui: allowments["ui"] ?? false, allow_uo: allowments["uo"] ?? false, allow_un: allowments["un"] ?? false)
  case "v":
    return v_ability(array, cursor: vowelCursor, allow_ve: allowments["ve"] ?? false)
  default:
    return ""
  }
}

func a_ability(_ array: Array<Any>, cursor: Int, allow_ai: Bool = true, allow_ao: Bool = true, allow_an: Bool = true, allow_ang: Bool = true) -> String {
  //This checks what the final vowels (staring with "a") will be.
  //Cursor should point to "a".
  //a, ai, ao, an, ang
  let secondLetter: String = arraySafeAccess(array, element: cursor+1) as? String ?? "" //The letter after cursor (a)
  let thirdLetter: String = arraySafeAccess(array, element: cursor+2) as? String ?? "" //The letter after the second one
  switch secondLetter { //Check the second letter in order to confirm what they are
  case "n": //an, ang
    if thirdLetter == "g" { //ang
      if allow_ang {
        return "ang"
      } else if allow_an {
        return "an"
      } else {
        return "a"
      }
    } else {
      if allow_an { //an
        return "an"
      } else {
        return "a"
      }
    }
  case "i": //ai
    if allow_ai {
      return "ai"
    } else {
      return "a"
    }
  case "o": //ao
    if allow_ao {
      return "ao"
    } else {
      return "a"
    }
  default : //a
    return "a"
  }
}

func e_ability(_ array: Array<Any>, cursor: Int, allow_ei: Bool = true, allow_er: Bool = true, allow_en: Bool = true, allow_eng: Bool = true) -> String {
  //This checks what the final vowels (staring with "e") will be.
  //Cursor should point to "e".
  //e, ei, er, en, eng
  let secondLetter: String = arraySafeAccess(array, element: cursor+1) as? String ?? "" //The letter after cursor (e)
  let thirdLetter: String = arraySafeAccess(array, element: cursor+2) as? String ?? "" //The letter after the second one
  switch secondLetter { //Check the second letter in order to confirm what they are
  case "i": //ei
    if allow_ei {
      return "ei"
    } else {
      return "e"
    }
  case "r": //er
    if allow_er {
      return "er"
    } else {
      return "e"
    }
  case "n": //en, eng
    if thirdLetter == "g" { //eng
      if allow_eng {
        return "eng"
      } else if allow_en {
        return "en"
      } else {
        return "e"
      }
    } else { //en
      if allow_en {
        return "en"
      } else {
        return "e"
      }
    }
  default : //e
    return "e"
  }
}

func i_ability(_ array: Array<Any>, cursor: Int, allow_ia: Bool = true, allow_iao: Bool = true, allow_ian: Bool = true, allow_iang: Bool = true, allow_ie: Bool = true, allow_iong: Bool = true, allow_iu: Bool = true, allow_in: Bool = true, allow_ing: Bool = true) -> String {
  //This checks what the final vowels (staring with "i") will be.
  //Cursor should point to "i".
  //i, ia, iao, ian, iang, ie, iong, iu, in, ing
  let secondLetter: String = arraySafeAccess(array, element: cursor+1) as? String ?? "" //The letter after cursor (i)
  let thirdLetter: String = arraySafeAccess(array, element: cursor+2) as? String ?? "" //The letter after the second one
  let fourthLetter: String = arraySafeAccess(array, element: cursor+3) as? String ?? "" //The letter after the third one
  switch secondLetter { //Check the second letter in order to confirm what they are
  case "a": //ia, iao, ian, iang
    if thirdLetter == "o" { //iao
      if allow_iao {
        return "iao"
      } else if allow_ia {
        return "ia"
      } else {
        return "i"
      }
    } else if thirdLetter == "n" { //ian, iang
      if fourthLetter == "g" { //iang
        if allow_ing {
          return "iang"
        } else if allow_ian {
          return "ian"
        } else if allow_ia {
          return "ia"
        } else {
          return "i"
        }
      } else { //ian
        if allow_ian {
          return "ian"
        } else if allow_ia {
          return "ia"
        } else {
          return "i"
        }
      }
    } else { //ia
      if allow_ia {
        return "ia"
      } else {
        return "i"
      }
    }
  case "e": //ie
    if allow_ie {
      return "ie"
    } else {
      return "i"
    }
  case "o": //iong
    if thirdLetter == "n" && fourthLetter == "g" {
      if allow_iong {
        return "iong"
      } else {
        return "i"
      }
    } else {
      return "i"
    }
  case "u": //iu
    if allow_iu {
      return "iu"
    } else {
      return "i"
    }
  case "n":
    if thirdLetter == "g" { //ing
      if allow_ing {
        return "ing"
      } else if allow_in {
        return "in"
      } else {
        return "i"
      }
    } else { //in
      if allow_in {
        return "in"
      } else {
        return "i"
      }
    }
  default: //i
    return "i"
  }
}

func o_ability(_ array: Array<Any>, cursor: Int, allow_ou: Bool = true, allow_ong: Bool = true) -> String {
  //This checks what the final vowels (staring with "o") will be.
  //Cursor should point to "o".
  //o, ou, ong
  let secondLetter: String = arraySafeAccess(array, element: cursor+1) as? String ?? "" //The letter after cursor (o)
  let thirdLetter: String = arraySafeAccess(array, element: cursor+2) as? String ?? "" //The letter after the second one
  switch secondLetter { //Check the second letter in order to confirm what they are
  case "u": //ou
    if allow_ou {
      return "ou"
    } else {
      return "o"
    }
  case "n": //ong
    if thirdLetter == "g" { //ong
      if allow_ong {
        return "ong"
      } else {
        return "o"
      }
    } else {
      return "o"
    }
  default : //o
    return "o"
  }
}

func u_ability(_ array: Array<Any>, cursor: Int, allow_ua: Bool = true, allow_uai: Bool = true, allow_uan: Bool = true, allow_uang: Bool = true, allow_ue: Bool = true, allow_ui: Bool = true, allow_uo: Bool = true, allow_un: Bool = true) -> String {
  //This checks what the final vowels (staring with "u") will be.
  //Cursor should point to "u".
  //u, ua, uai, uan, uang, ue, ui, uo, un
  let secondLetter: String = arraySafeAccess(array, element: cursor+1) as? String ?? "" //The letter after cursor (u)
  let thirdLetter: String = arraySafeAccess(array, element: cursor+2) as? String ?? "" //The letter after the second one
  let fourthLetter: String = arraySafeAccess(array, element: cursor+3) as? String ?? "" //The letter after the third one
  switch secondLetter { //Check the second letter in order to confirm what they are
  case "a": //ua, uai, uan
    if thirdLetter == "i" { //uai
      if allow_uai {
        return "uai"
      } else if allow_ua {
        return "ua"
      } else {
        return "u"
      }
    } else if thirdLetter == "n" { //uan, uang
      if fourthLetter == "g" { //uang
        if allow_uang {
          return "uang"
        } else if allow_uan {
          return "uan"
        } else if allow_ua {
          return "ua"
        } else {
          return "u"
        }
      } else { //uan
        if allow_uan {
          return "uan"
        } else if allow_ua {
          return "ua"
        } else {
          return "u"
        }
      }
    } else { //ua
      if allow_ua {
        return "ua"
      } else {
        return "u"
      }
    }
  case "e": //ue
    if allow_ue {
      return "ue"
    } else {
      return "u"
    }
  case "i": //ui
    if allow_ui {
      return "ui"
    } else {
      return "u"
    }
  case "o": //uo
    if allow_uo {
      return "uo"
    } else {
      return "u"
    }
  case "n": //un
    if allow_un {
      return "un"
    } else {
      return "u"
    }
  default : //u
    return "u"
  }
}

func v_ability(_ array: Array<Any>, cursor: Int, allow_ve: Bool = true) -> String {
  //This checks what the final vowels (staring with "v") will be.
  //Cursor should point to "v".
  //v, ve
  let secondLetter: String = arraySafeAccess(array, element: cursor+1) as? String ?? "" //The letter after cursor (v)
  switch secondLetter { //Check the second letter in order to confirm what they are
  case "e": //ve
    if allow_ve {
      return "ve"
    } else {
      return "v"
    }
  default: //v
    return "v"
  }
}
